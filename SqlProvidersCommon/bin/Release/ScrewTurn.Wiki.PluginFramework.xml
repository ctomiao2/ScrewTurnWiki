<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScrewTurn.Wiki.PluginFramework</name>
    </assembly>
    <members>
        <member name="T:ScrewTurn.Wiki.Actions">
            <summary>
            Contains actions for resources.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.FullControl">
            <summary>
            The full control action.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Actions.ForGlobals">
            <summary>
            Contains actions for global resources.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ResourceMasterPrefix">
            <summary>
            The master prefix for global resources ('G').
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageAccounts">
            <summary>
            Manage user accounts.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageGroups">
            <summary>
            Manage user groups.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManagePagesAndCategories">
            <summary>
            Manage pages and categories.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageDiscussions">
            <summary>
            Manage page discussions.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageNamespaces">
            <summary>
            Manage namespaces.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageConfiguration">
            <summary>
            Manage configuration.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageProviders">
            <summary>
            Manage providers.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageFiles">
            <summary>
            Manage files.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageSnippetsAndTemplates">
            <summary>
            Manage snippets and templates.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageNavigationPaths">
            <summary>
            Manage navigation paths.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageMetaFiles">
            <summary>
            Manage meta-files.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManagePermissions">
            <summary>
            Manage permissions.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.ManageGlobalConfiguration">
            <summary>
            Manage global configuration.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForGlobals.All">
            <summary>
            Gets an array containing all actions.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Actions.ForGlobals.GetFullName(System.String)">
            <summary>
            Gets the full name of an action.
            </summary>
            <param name="name">The internal name.</param>
            <returns>The full name.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.Actions.ForNamespaces">
            <summary>
            Contains actions for namespaces.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.ResourceMasterPrefix">
            <summary>
            The master prefix for namespaces ('N.').
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.LocalEscalators">
            <summary>
            The local escalation policies.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.GlobalEscalators">
            <summary>
            The global escalation policies.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.ReadPages">
            <summary>
            Read pages.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.CreatePages">
            <summary>
            Create pages.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.ModifyPages">
            <summary>
            Modify pages.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.DeletePages">
            <summary>
            Delete pages.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.ManagePages">
            <summary>
            Manage pages.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.ReadDiscussion">
            <summary>
            Read page discussions.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.PostDiscussion">
            <summary>
            Post messages in page discussions.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.ManageDiscussion">
            <summary>
            Manage messages in page discussions.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.ManageCategories">
            <summary>
            Manage categories.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.DownloadAttachments">
            <summary>
            Download attachments.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.UploadAttachments">
            <summary>
            Upload attachments.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.DeleteAttachments">
            <summary>
            Delete attachments.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForNamespaces.All">
            <summary>
            Gets an array containing all actions.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Actions.ForNamespaces.GetFullName(System.String)">
            <summary>
            Gets the full name of an action.
            </summary>
            <param name="name">The internal name.</param>
            <returns>The full name.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.Actions.ForPages">
            <summary>
            Contains actions for pages.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.ResourceMasterPrefix">
            <summary>
            The master prefix for pages ('P.').
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.LocalEscalators">
            <summary>
            The local escalation policies.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.NamespaceEscalators">
            <summary>
            The namespace escalation policies.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.GlobalEscalators">
            <summary>
            The global escalation policies.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.ReadPage">
            <summary>
            Read the page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.ModifyPage">
            <summary>
            Modify the page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.ManagePage">
            <summary>
            Manage the page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.ReadDiscussion">
            <summary>
            Read page discussion.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.PostDiscussion">
            <summary>
            Post messages in page discussion.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.ManageDiscussion">
            <summary>
            Manage page discussion.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.ManageCategories">
            <summary>
            Manage the categories of the page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.DownloadAttachments">
            <summary>
            Download attachments.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.UploadAttachments">
            <summary>
            Upload attachments.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.DeleteAttachments">
            <summary>
            Delete attachments.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForPages.All">
            <summary>
            Gets an array containing all actions.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Actions.ForPages.GetFullName(System.String)">
            <summary>
            Gets the full name of an action.
            </summary>
            <param name="name">The internal name.</param>
            <returns>The full name.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.Actions.ForDirectories">
            <summary>
            Contains actions for file directories.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForDirectories.ResourceMasterPrefix">
            <summary>
            The master prefix for directories ('D.').
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForDirectories.LocalEscalators">
            <summary>
            The local escalation policies.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForDirectories.GlobalEscalators">
            <summary>
            The global escalation policies.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForDirectories.List">
            <summary>
            List files and directories.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForDirectories.DownloadFiles">
            <summary>
            Download files.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForDirectories.UploadFiles">
            <summary>
            Upload files.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForDirectories.DeleteFiles">
            <summary>
            Delete files.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForDirectories.CreateDirectories">
            <summary>
            Create directories.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForDirectories.DeleteDirectories">
            <summary>
            Delete directories.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Actions.ForDirectories.All">
            <summary>
            Gets an array containing all actions.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Actions.ForDirectories.GetFullName(System.String)">
            <summary>
            Gets the full name of an action.
            </summary>
            <param name="name">The internal name.</param>
            <returns>The full name.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.CategoryInfo">
            <summary>
            Represents a Page Category. A page can be binded with one or more categories (within the same Provider); this class manages this binding.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.CategoryInfo.nspace">
            <summary>
            The namespace of the Category.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.CategoryInfo.name">
            <summary>
            The Name of the Category.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.CategoryInfo.provider">
            <summary>
            The Provider that handles the Category.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.CategoryInfo.pages">
            <summary>
            The Pages of the Category.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.CategoryInfo.#ctor(System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40)">
            <summary>
            Initializes a new instance of the <see cref="T:CategoryInfo" /> class.
            </summary>
            <param name="fullName">The Full Name of the Category.</param>
            <param name="provider">The Storage that manages the category.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.CategoryInfo.FullName">
            <summary>
            Gets or sets the full name of the Category, such as 'Namespace.Category' or 'Category'.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.CategoryInfo.Provider">
            <summary>
            Gets or sets the Provider that manages the Category.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.CategoryInfo.Pages">
            <summary>
            Gets or sets the Page array, containing their names.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.CategoryInfo.ToString">
            <summary>
            Gets a string representation of the current object.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.CategoryNameComparer">
            <summary>
            Compares two <b>CategoryInfo</b> objects, using the FullName as parameter.
            </summary>
            <remarks>The comparison is <b>case insensitive</b>.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.CategoryNameComparer.Compare(ScrewTurn.Wiki.PluginFramework.CategoryInfo,ScrewTurn.Wiki.PluginFramework.CategoryInfo)">
            <summary>
            Compares two <see cref="T:ScrewTurn.Wiki.PluginFramework.CategoryInfo"/> objects, using the FullName as parameter.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>The comparison result (-1, 0 or 1).</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.ComponentInformation">
            <summary>
            Contains information about a Provider.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.ComponentInformation.name">
            <summary>
            The Name of the Component.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.ComponentInformation.author">
            <summary>
            The Author of the Component.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.ComponentInformation.version">
            <summary>
            The component version.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.ComponentInformation.url">
            <summary>
            The info URL of the Component/Author.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.ComponentInformation.updateUrl">
            <summary>
            The component update URL which should point to a text file containing one or two rows (separated by \r\n or \n):
            1. A list of increasing versions separated by pipes, such as "1.0.0|1.0.1|1.0.2" (without quotes)
            2. (optional) The absolute HTTP URL of the latest DLL, for example "http://www.server.com/update/MyAssembly.dll" (without quotes)
            The second row should only be present if the provider can be updated automatically without any type of user
            intervention, i.e. by simply replacing the DLL and restarting the wiki. If the DLL contains multiple providers,
            they are all updated (obviously). The new DLL must have the same name of the being-replaced DLL (in other words,
            a provider must reside in the same DLL forever in order to be updated automatically).
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ComponentInformation.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <b>ComponentInformation</b> class.
            </summary>
            <param name="name">The Name of the Component.</param>
            <param name="author">The Author of the Component.</param>
            <param name="version">The component version.</param>
            <param name="url">The info URL of the Component/Author.</param>
            <param name="updateUrl">The update URL of the component, or <c>null</c>.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ComponentInformation.Name">
            <summary>
            Gets the Name of the Component.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ComponentInformation.Author">
            <summary>
            Gets the Author of the Component.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ComponentInformation.Version">
            <summary>
            Gets the component version.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ComponentInformation.Url">
            <summary>
            Gets the info URL of the Component/Author.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ComponentInformation.UpdateUrl">
            <summary>
            Gets the update URL of the component.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.ContentTemplate">
            <summary>
            Contains a template for page content.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.ContentTemplate.name">
            <summary>
            The name of the template.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.ContentTemplate.content">
            <summary>
            The content of the template.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.ContentTemplate.provider">
            <summary>
            The provider handling the template.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ContentTemplate.#ctor(System.String,System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40)">
            <summary>
            Initializes a new instance of the <see cref="T:ContentTemplate" /> class.
            </summary>
            <param name="name">The name of the template.</param>
            <param name="content">The content of the template.</param>
            <param name="provider">The provider handling the template.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContentTemplate.Name">
            <summary>
            Gets the name of the template.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContentTemplate.Content">
            <summary>
            Gets the content of the template.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContentTemplate.Provider">
            <summary>
            Gets the provider handling the template.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.ContentTemplateNameComparer">
            <summary>
            Compares two <see cref="T:ContentTemplate" /> objects.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ContentTemplateNameComparer.Compare(ScrewTurn.Wiki.PluginFramework.ContentTemplate,ScrewTurn.Wiki.PluginFramework.ContentTemplate)">
            <summary>
            Compares the name of two <see cref="T:ContentTemplate" /> objects.
            </summary>
            <param name="x">The first <see cref="T:ContentTemplate" />.</param>
            <param name="y">The second <see cref="T:ContentTemplate" />.</param>
            <returns>The result of the comparison (1, 0 or -1).</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.ContextInformation">
            <summary>
            Contains information about the Context of the page formatting.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ContextInformation.#ctor(System.Boolean,System.Boolean,ScrewTurn.Wiki.PluginFramework.FormattingContext,System.String,System.String,System.Web.HttpContext,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <b>FormatContext</b> class.
            </summary>
            <param name="forIndexing">A value indicating whether the formatting is being done for content indexing.</param>
            <param name="forWysiwyg">A value indicating whether the formatting is being done for display in the WYSIWYG editor.</param>
            <param name="context">The formatting context.</param>
            <param name="pageFullName">The Page Information, if any, <c>null</c> otherwise.</param>
            <param name="language">The current Thread's language (for example "en-US").</param>
            <param name="httpContext">The current HTTP Context object.</param>
            <param name="username">The current User's Username (or <c>null</c>).</param>
            <param name="groups">The groups the user is member of (or <c>null</c>).</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContextInformation.ForIndexing">
            <summary>
            Gets a value indicating whether the formatting is being done for content indexing.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContextInformation.ForWysiwyg">
            <summary>
            Gets a value indicating whether the formatting is being done for display in the WYSIWYG editor.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContextInformation.Context">
            <summary>
            Gets the formatting context.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContextInformation.Page">
            <summary>
            Gets the Page Information.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContextInformation.Language">
            <summary>
            Gets the current Thread's Language (for example en-US).
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContextInformation.HttpContext">
            <summary>
            Gets the current HTTP Context object.
            </summary>
            <remarks>The context might not be valid when doing an index rebuild (see <see cref="P:ScrewTurn.Wiki.PluginFramework.ContextInformation.ForIndexing"/>).</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContextInformation.Username">
            <summary>
            Gets the Username of the current User (or <c>null</c>).
            </summary>
            <remarks>If the Username is not available, the return value is <c>null</c>.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ContextInformation.Groups">
            <summary>
            Gets the groups the user is member of (or <c>null</c>).
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.FormattingContext">
            <summary>
            Lists formatting contexts.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingContext.Header">
            <summary>
            The overall header.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingContext.Footer">
            <summary>
            The overall footer.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingContext.Sidebar">
            <summary>
            The sidebar.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingContext.PageHeader">
            <summary>
            The page header.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingContext.PageFooter">
            <summary>
            The page footer.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingContext.PageContent">
            <summary>
            The page content.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingContext.TranscludedPageContent">
            <summary>
            Transcluded page content.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingContext.MessageBody">
            <summary>
            The body of a message.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingContext.Other">
            <summary>
            Any other context.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingContext.Unknown">
            <summary>
            No know context.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.FileActivityEventArgs">
            <summary>
            Contains arguments for the File Activity event.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.FileActivityEventArgs.#ctor(ScrewTurn.Wiki.PluginFramework.StFileInfo,System.String,ScrewTurn.Wiki.PluginFramework.StDirectoryInfo,System.String,System.String,ScrewTurn.Wiki.PluginFramework.FileActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:FileActivityEventArgs" /> class.
            </summary>
            <param name="file">The file that changed, if any (full path).</param>
            <param name="oldFileName">The old name of the file, if any (full path).</param>
            <param name="directory">The directory that changed, if any (full path).</param>
            <param name="oldDirectoryName">The old name of the directory, if any (full path).</param>
            <param name="pageFullName">The page owning the attachment, if any.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.FileActivityEventArgs.Provider">
            <summary>
            Gets the provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.FileActivityEventArgs.File">
            <summary>
            Gets the file that changed, if any.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.FileActivityEventArgs.OldFileName">
            <summary>
            Gets the old name of the file, if any.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.FileActivityEventArgs.Directory">
            <summary>
            Gets the directory that changed, if any.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.FileActivityEventArgs.OldDirectoryName">
            <summary>
            Gets the old name of the directory, if any.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.FileActivityEventArgs.Page">
            <summary>
            Gets the page owning the attachment, if any.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.FileActivityEventArgs.Activity">
            <summary>
            Gets the activity.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.FileActivity">
            <summary>
            Lists legal file activities.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FileActivity.FileUploaded">
            <summary>
            A file has been uploaded.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FileActivity.FileRenamed">
            <summary>
            A file has been renamed.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FileActivity.FileDeleted">
            <summary>
            A file has been deleted.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FileActivity.DirectoryCreated">
            <summary>
            A directory has been created.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FileActivity.DirectoryRenamed">
            <summary>
            A directory has been renamed.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FileActivity.DirectoryDeleted">
            <summary>
            A directory (and all its contents) has been deleted.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FileActivity.AttachmentUploaded">
            <summary>
            An attachment has been uploaded.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FileActivity.AttachmentRenamed">
            <summary>
            An attachment has been renamed.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FileActivity.AttachmentDeleted">
            <summary>
            An attachment has been deleted.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.FileDetails">
            <summary>
            Contains information about a file.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.FileDetails.#ctor(System.Int64,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FileDetails" /> class.
            </summary>
            <param name="size">The size of the file in bytes.</param>
            <param name="lastModified">The modification date/time.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.FileDetails.Size">
            <summary>
            Gets the size of the file in bytes.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.FileDetails.LastModified">
            <summary>
            Gets the modification date/time.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40">
            <summary>
            It is the interface that must be implemented in order to create a custom Files Storage Provider for ScrewTurn Wiki.
            </summary>
            <remarks>A class that implements this interface <b>should not</b> have any kind of data caching. 
            All directory paths are specified in a UNIX-like fashion, for example "/my/directory/myfile.jpg". 
            All paths must start with '/'. All Directory paths must end with '/'.
            All paths are case-insensitive.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.ListFiles(System.String)">
            <summary>
            Lists the Files in the specified Directory.
            </summary>
            <param name="directory">The full directory name, for example "/my/directory". Null, empty or "/" for the root directory.</param>
            <returns>The list of Files in the directory.</returns>
            <exception cref="T:System.ArgumentException">If <paramref name="directory"/> does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.ListDirectories(System.String)">
            <summary>
            Lists the Directories in the specified directory.
            </summary>
            <param name="directory">The full directory name, for example "/my/directory". Null, empty or "/" for the root directory.</param>
            <returns>The list of Directories in the Directory.</returns>
            <exception cref="T:System.ArgumentException">If <paramref name="directory"/> does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.StoreFile(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Stores a file.
            </summary>
            <param name="fullName">The full name of the file.</param>
            <param name="sourceStream">A Stream object used as <b>source</b> of a byte stream, 
            i.e. the method reads from the Stream and stores the content properly.</param>
            <param name="overwrite"><c>true</c> to overwrite an existing file.</param>
            <returns><c>true</c> if the File is stored, <c>false</c> otherwise.</returns>
            <remarks>If <b>overwrite</b> is <c>false</c> and File already exists, the method returns <c>false</c>.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> or <paramref name="sourceStream"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty or <paramref name="sourceStream"/> does not support reading.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.RetrieveFile(System.String,System.IO.Stream)">
            <summary>
            Retrieves a File.
            </summary>
            <param name="fullName">The full name of the File.</param>
            <param name="destinationStream">A Stream object used as <b>destination</b> of a byte stream, 
            i.e. the method writes to the Stream the file content.</param>
            <returns><c>true</c> if the file is retrieved, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> or <paramref name="destinationStream"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty or <paramref name="destinationStream"/> does not support writing, or if <paramref name="fullName"/> does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.GetFileDetails(System.String)">
            <summary>
            Gets the details of a file.
            </summary>
            <param name="fullName">The full name of the file.</param>
            <returns>The details, or <c>null</c> if the file does not exist.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.DeleteFile(System.String)">
            <summary>
            Deletes a File.
            </summary>
            <param name="fullName">The full name of the File.</param>
            <returns><c>true</c> if the File is deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty or it does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.RenameFile(System.String,System.String)">
            <summary>
            Renames or moves a File.
            </summary>
            <param name="oldFullName">The old full name of the File.</param>
            <param name="newFullName">The new full name of the File.</param>
            <returns><c>true</c> if the File is renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="oldFullName"/> or <paramref name="newFullName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="oldFullName"/> or <paramref name="newFullName"/> are empty, or if the old file does not exist, or if the new file already exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.CreateDirectory(System.String,System.String)">
            <summary>
            Creates a new Directory.
            </summary>
            <param name="path">The path to create the new Directory in.</param>
            <param name="name">The name of the new Directory.</param>
            <returns><c>true</c> if the Directory is created, <c>false</c> otherwise.</returns>
            <remarks>If <b>path</b> is "/my/directory" and <b>name</b> is "newdir", a new directory named "/my/directory/newdir" is created.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="path"/> or <paramref name="name"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty or if the directory does not exist, or if the new directory already exists.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.DeleteDirectory(System.String)">
            <summary>
            Deletes a Directory and <b>all of its content</b>.
            </summary>
            <param name="fullPath">The full path of the Directory.</param>
            <returns><c>true</c> if the Directory is delete, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullPath"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullPath"/> is empty or if it equals '/' or it does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.RenameDirectory(System.String,System.String)">
            <summary>
            Renames or moves a Directory.
            </summary>
            <param name="oldFullPath">The old full path of the Directory.</param>
            <param name="newFullPath">The new full path of the Directory.</param>
            <returns><c>true</c> if the Directory is renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="oldFullPath"/> or <paramref name="newFullPath"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="oldFullPath"/> or <paramref name="newFullPath"/> are empty or equal to '/', 
            or if the old directory does not exist or the new directory already exists.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.GetPagesWithAttachments">
            <summary>
            The names of the pages with attachments.
            </summary>
            <returns>The names of the pages with attachments.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.ListPageAttachments(System.String)">
            <summary>
            Returns the names of the Attachments of a Page.
            </summary>
            <param name="pageFullName">The full name of the page that owns the Attachments.</param>
            <returns>The names, or an empty list.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.StorePageAttachment(System.String,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Stores a Page Attachment.
            </summary>
            <param name="pageFullName">The Page Info that owns the Attachment.</param>
            <param name="name">The name of the Attachment, for example "myfile.jpg".</param>
            <param name="sourceStream">A Stream object used as <b>source</b> of a byte stream, 
            i.e. the method reads from the Stream and stores the content properly.</param>
            <param name="overwrite"><c>true</c> to overwrite an existing Attachment.</param>
            <returns><c>true</c> if the Attachment is stored, <c>false</c> otherwise.</returns>
            <remarks>If <b>overwrite</b> is <c>false</c> and Attachment already exists, the method returns <c>false</c>.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/>, <paramref name="name"/> or <paramref name="sourceStream"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/>, <paramref name="name"/> are empty or if <paramref name="sourceStream"/> does not support reading.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.RetrievePageAttachment(System.String,System.String,System.IO.Stream)">
            <summary>
            Retrieves a Page Attachment.
            </summary>
            <param name="pageFullName">The Page Info that owns the Attachment.</param>
            <param name="name">The name of the Attachment, for example "myfile.jpg".</param>
            <param name="destinationStream">A Stream object used as <b>destination</b> of a byte stream, 
            i.e. the method writes to the Stream the file content.</param>
            <returns><c>true</c> if the Attachment is retrieved, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/>, <paramref name="name"/> or <paramref name="destinationStream"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> or <paramref name="name"/> are empty or if <paramref name="destinationStream"/> does not support writing,
            or if the page does not have attachments or if the attachment does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.GetPageAttachmentDetails(System.String,System.String)">
            <summary>
            Gets the details of a page attachment.
            </summary>
            <param name="pageFullName">The full name of the page that owns the attachment.</param>
            <param name="attachmentName">The name of the attachment, for example "myfile.jpg".</param>
            <returns>The details of the attachment, or <c>null</c> if the attachment does not exist.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> or <paramref name="attachmentName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> or <paramref name="attachmentName"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.DeletePageAttachment(System.String,System.String)">
            <summary>
            Deletes a Page Attachment.
            </summary>
            <param name="pageFullName">The Page Info that owns the Attachment.</param>
            <param name="attachmentName">The name of the Attachment, for example "myfile.jpg".</param>
            <returns><c>true</c> if the Attachment is deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> or <paramref name="attachmentName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> or <paramref name="attachmentName"/> are empty or if the page or attachment do not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.RenamePageAttachment(System.String,System.String,System.String)">
            <summary>
            Renames a Page Attachment.
            </summary>
            <param name="pageFullName">The Page Info that owns the Attachment.</param>
            <param name="oldName">The old name of the Attachment.</param>
            <param name="newName">The new name of the Attachment.</param>
            <returns><c>true</c> if the Attachment is renamed, false otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/>, <paramref name="oldName"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/>, <paramref name="oldName"/> or <paramref name="newName"/> are empty,
            or if the page or old attachment do not exist, or the new attachment name already exists.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40.NotifyPageRenaming(System.String,System.String)">
            <summary>
            Notifies the Provider that a Page has been renamed.
            </summary>
            <param name="oldPageFullName">The old page full name.</param>
            <param name="newPageFullName">The new page full name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="oldPageFullName"/> or <paramref name="newPageFullName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="oldPageFullName"/> or <paramref name="newPageFullName"/> are empty or if the new page full name is already in use.</exception>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.IFormatterProviderV40">
            <summary>
            It is the interface that must be implemented in order to create a custom Formatter Provider for ScrewTurn Wiki.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IFormatterProviderV40.PerformPhase1">
            <summary>
            Specifies whether or not to execute Phase 1.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IFormatterProviderV40.PerformPhase2">
            <summary>
            Specifies whether or not to execute Phase 2.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IFormatterProviderV40.PerformPhase3">
            <summary>
            Specifies whether or not to execute Phase 3.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IFormatterProviderV40.ExecutionPriority">
            <summary>
            Gets the execution priority of the provider (0 lowest, 100 highest).
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFormatterProviderV40.Format(System.String,ScrewTurn.Wiki.PluginFramework.ContextInformation,ScrewTurn.Wiki.PluginFramework.FormattingPhase)">
            <summary>
            Performs a Formatting phase.
            </summary>
            <param name="raw">The raw content to Format.</param>
            <param name="context">The Context information.</param>
            <param name="phase">The Phase.</param>
            <returns>The Formatted content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFormatterProviderV40.PrepareTitle(System.String,ScrewTurn.Wiki.PluginFramework.ContextInformation)">
            <summary>
            Prepares the title of an item for display (always during phase 3).
            </summary>
            <param name="title">The input title.</param>
            <param name="context">The context information.</param>
            <returns>The prepared title (no markup allowed).</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IFormatterProviderV40.HandleRequest(System.Web.HttpContext,System.Text.RegularExpressions.Match)">
            <summary>
            Method called when the plugin must handle a HTTP request.
            </summary>
            <param name="context">The HTTP context.</param>
            <param name="urlMatch">The URL match.</param>
            <returns><c>true</c> if the request was handled, <c>false</c> otherwise.</returns>
            <remarks>This method is called only when a request matches the 
            parameters configured by calling <see cref="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RegisterRequestHandler(ScrewTurn.Wiki.PluginFramework.IProviderV40,System.String,System.String[])"/> during <see cref="M:ScrewTurn.Wiki.PluginFramework.IProviderV40.SetUp(ScrewTurn.Wiki.PluginFramework.IHostV40,System.String)"/>. 
            If the plugin <b>did not</b> call <see cref="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RegisterRequestHandler(ScrewTurn.Wiki.PluginFramework.IProviderV40,System.String,System.String[])"/>, this method is never called.</remarks>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.FormattingPhase">
            <summary>
            Enumerates formatting Phases.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingPhase.Phase1">
            <summary>
            Phase 1, performed before the internal formatting step.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingPhase.Phase2">
            <summary>
            Phase 2, performed after the internal formatting step.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.FormattingPhase.Phase3">
            <summary>
            Phase 3, performed before sending the page content to the client.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40">
            <summary>
            The interface that must be implemented by a Storage Provider containing Global application configuration settings.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.GetSetting(System.String)">
            <summary>
            Retrieves the value of a Setting.
            </summary>
            <param name="name">The name of the Setting.</param>
            <returns>The value of the Setting, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.GetAllSettings">
            <summary>
            Gets the all the setting values.
            </summary>
            <returns>All the settings.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.SetSetting(System.String,System.String)">
            <summary>
            Stores the value of a Setting.
            </summary>
            <param name="name">The name of the Setting.</param>
            <param name="value">The value of the Setting. Value cannot contain CR and LF characters, which will be removed.</param>
            <returns>True if the Setting is stored, false otherwise.</returns>
            <remarks>This method stores the Value immediately.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.GetAllWikis">
            <summary>
            Gets alls the wikis.
            </summary>
            <returns>A collection of wiki identifiers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.ExtractWikiName(System.String)">
            <summary>
            Extracts the name of the wiki from the given host.
            </summary>
            <param name="host">The host.</param>
            <returns>The name of the wiki.</returns>
            <exception cref="T:ScrewTurn.Wiki.PluginFramework.WikiNotFoundException">If no wiki is found corresponding to the given host.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.ListPluginAssemblies">
            <summary>
            Lists the stored plugin assemblies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.StorePluginAssembly(System.String,System.Byte[])">
            <summary>
            Stores a plugin's assembly, overwriting existing ones if present.
            </summary>
            <param name="filename">The file name of the assembly, such as "Assembly.dll".</param>
            <param name="assembly">The assembly content.</param>
            <returns><c>true</c> if the assembly is stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="filename"/> or <paramref name="assembly"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="filename"/> or <paramref name="assembly"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.RetrievePluginAssembly(System.String)">
            <summary>
            Retrieves a plugin's assembly.
            </summary>
            <param name="filename">The file name of the assembly.</param>
            <returns>The assembly content, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="filename"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="filename"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.DeletePluginAssembly(System.String)">
            <summary>
            Removes a plugin's assembly.
            </summary>
            <param name="filename">The file name of the assembly to remove, such as "Assembly.dll".</param>
            <returns><c>true</c> if the assembly is removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="filename"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="filename"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.LogEntry(System.String,ScrewTurn.Wiki.PluginFramework.EntryType,System.String,System.String)">
            <summary>
            Records a message to the System Log.
            </summary>
            <param name="message">The Log Message.</param>
            <param name="entryType">The Type of the Entry.</param>
            <param name="user">The User.</param>
            <param name="wiki">The wiki, <c>null</c> if is an application level log.</param>
            <remarks>This method <b>should not</b> write messages to the Log using the method IHost.LogEntry.
            This method should also never throw exceptions (except for parameter validation).</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="message"/> or <paramref name="user"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="message"/> or <paramref name="user"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.GetLogEntries">
            <summary>
            Gets all the Log Entries, sorted by date/time (oldest to newest).
            </summary>
            <returns>The Log Entries.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.ClearLog">
            <summary>
            Clear the Log.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IGlobalSettingsStorageProviderV40.LogSize">
            <summary>
            Gets the current size of the Log, in KB.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.LogEntry">
            <summary>
            Represents a Log Entry.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.LogEntry.#ctor(ScrewTurn.Wiki.PluginFramework.EntryType,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <b>LogEntry</b> class.
            </summary>
            <param name="type">The type of the Entry</param>
            <param name="dateTime">The DateTime.</param>
            <param name="message">The Message.</param>
            <param name="user">The User.</param>
            <param name="wiki">The Wiki.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.LogEntry.EntryType">
            <summary>
            Gets the EntryType.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.LogEntry.DateTime">
            <summary>
            Gets the DateTime.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.LogEntry.Message">
            <summary>
            Gets the Message.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.LogEntry.User">
            <summary>
            Gets the User.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.LogEntry.Wiki">
            <summary>
            Gets the wiki.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.EntryType">
            <summary>
            Enumerates the Types of Log Entries.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.EntryType.General">
            <summary>
            Represents a simple Message.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.EntryType.Warning">
            <summary>
            Represents a Warning.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.EntryType.Error">
            <summary>
            Represents an Error.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.LoggingLevel">
            <summary>
            Lists legal logging level values.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.LoggingLevel.AllMessages">
            <summary>
            All messages are logged.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.LoggingLevel.WarningsAndErrors">
            <summary>
            Warnings and errors are logged.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.LoggingLevel.ErrorsOnly">
            <summary>
            Errors only are logged.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.LoggingLevel.DisableLog">
            <summary>
            Logging is completely disabled.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.WikiNotFoundException">
            <summary>
            Represents errors that occur while stracting wiki name from a given host name.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.WikiNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <b>WikiNotFoundException</b> class.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.WikiNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>WikiNotFoundException</b> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.WikiNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <b>WikiNotFoundException</b> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner Exception.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.WikiNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <b>WikiNotFoundException</b> class.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.IHostV40">
            <summary>
            It is the interface that the ScrewTurn Wiki's Host object implements.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetCurrentWiki">
            <summary>
            Gets the current wiki.
            </summary>
            <returns>The current wiki.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetGlobalSettingValue(ScrewTurn.Wiki.PluginFramework.GlobalSettingName)">
            <summary>
            Gets the global setting value.
            </summary>
            <param name="name">The name.</param>
            <returns>The global settings' value.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetSettingValue(ScrewTurn.Wiki.PluginFramework.SettingName)">
            <summary>
            Gets the values of the Settings.
            </summary>
            <param name="name">The Setting's Name.</param>
            <returns>The Setting's value.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetUsers">
            <summary>
            Gets the list of the Users.
            </summary>
            <returns>The users.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.FindUser(System.String)">
            <summary>
            Finds a user by username.
            </summary>
            <param name="username">The username.</param>
            <returns>The <see cref="T:UserInfo" />, or <c>null</c> if no users are found.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="username"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="username"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetCurrentUser">
            <summary>
            Gets the authenticated user in the current session, if any.
            </summary>
            <returns>The authenticated user, or <c>null</c> if no user is authenticated.</returns>
            <remarks>If the built-it <i>admin</i> user is authenticated, the returned user 
            has <i>admin</i> as Username.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetUserGroups">
            <summary>
            Gets the list of the user groups.
            </summary>
            <returns>The groups.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.FindUserGroup(System.String)">
            <summary>
            Finds a user group by name.
            </summary>
            <param name="name">The name.</param>
            <returns>The <see cref="T:UserGroup "/>, or <c>null</c> if no groups are found.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.CheckActionForGlobals(System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Checks whether an action is allowed for a global resource.
            </summary>
            <param name="action">The action (see <see cref="T:ScrewTurn.Wiki.Actions.ForGlobals"/> class)</param>
            <param name="user">The user.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>action</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>action</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.CheckActionForNamespace(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Checks whether an action is allowed for a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <param name="action">The action (see <see cref="T:ScrewTurn.Wiki.Actions.ForNamespaces"/> class)</param>
            <param name="user">The user.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>action</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>action</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.CheckActionForPage(System.String,System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Checks whether an action is allowed for a page in the given page.
            </summary>
            <param name="pageFullName">The full name of the page.</param>
            <param name="action">The action (see <see cref="T:ScrewTurn.Wiki.Actions.ForPages"/> class)</param>
            <param name="user">The user.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b>, <b>action</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>action</b> is empty.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.CheckActionForDirectory(ScrewTurn.Wiki.PluginFramework.StDirectoryInfo,System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Checks whether an action is allowed for a directory.
            </summary>
            <param name="directory">The directory.</param>
            <param name="action">The action (see <see cref="T:ScrewTurn.Wiki.Actions.ForDirectories"/>).</param>
            <param name="user">The user.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>directory</b>, <b>action</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>action</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetTheme(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the theme in use for a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The theme.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetNamespaces">
            <summary>
            Gets the list of the namespaces.
            </summary>
            <returns>The namespaces.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.FindNamespace(System.String)">
            <summary>
            Finds a namespace by name.
            </summary>
            <param name="name">The name.</param>
            <returns>The <see cref="T:NamespaceInfo" />, or <c>null</c> if no namespaces are found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetPages(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the list of the Pages in a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The pages.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetCategories(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the list of the Categories in a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The categories.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.CreateCategory(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String)">
            <summary>
            Creates a new category.
            </summary>
            <param name="nspace">The destination namespace (<c>null</c> for the root).</param>
            <param name="name">The name of the category (without namespace).</param>
            <returns><c>true</c> if the category was created, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty or if it is invalid.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RenameCategory(ScrewTurn.Wiki.PluginFramework.CategoryInfo,System.String)">
            <summary>
            Renames a category.
            </summary>
            <param name="category">The category to rename.</param>
            <param name="newName">The new name of the category (without namespace).</param>
            <returns><c>true</c> if the category was renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="category"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="newName"/> is empty or if it is invalid.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RemoveCategory(ScrewTurn.Wiki.PluginFramework.CategoryInfo)">
            <summary>
            Deletes a category.
            </summary>
            <param name="category">The category to delete.</param>
            <returns><c>true</c> if the category was deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="category"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetSnippets">
            <summary>
            Gets the list of Snippets.
            </summary>
            <returns>The snippets.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetNavigationPaths(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the list of Navigation Paths in a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The navigation paths.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetCategoriesPerPage(ScrewTurn.Wiki.PluginFramework.PageContent)">
            <summary>
            Gets the Categories of a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The Categories.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="page"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.FindPage(System.String)">
            <summary>
            Gets the Wiki Page with the specified full Name.
            </summary>
            <param name="fullName">The full Name of the Page.</param>
            <returns>The Wiki Page, or <c>null</c> if no pages are found.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetBackups(ScrewTurn.Wiki.PluginFramework.PageContent)">
            <summary>
            Gets the Backup/Revision numbers of a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The Backup/Revision numbers.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetBackupContent(ScrewTurn.Wiki.PluginFramework.PageContent,System.Int32)">
            <summary>
            Gets the Content of a Page Backup.
            </summary>
            <param name="page">The Page.</param>
            <param name="revision">The revision.</param>
            <returns>The Backup Content.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="revision"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetFormattedContent(System.String)">
            <summary>
            Gets the formatted content of a Page.
            </summary>
            <param name="pageFullName">The full name of the page.</param>
            <returns>The formatted content of the Page.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.CreatePage(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String[],System.String)">
            <summary>
            Creates a new page.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The page name (without namespace)</param>
            <param name="title">The page title.</param>
            <param name="username">The username of the user who created the page.</param>
            <param name="dateTime">The creation date/time.</param>
            <param name="comment">The comment (or <c>null</c>).</param>
            <param name="content">The page content.</param>
            <param name="keywords">The page keywords.</param>
            <param name="description">The page description.</param>
            <returns><c>true</c> if the page was created, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/>, <paramref name="title"/>, <paramref name="username"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/>, <paramref name="title"/> or <paramref name="username"/> are empty or if <paramref name="name"/> is invalid.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.UpdatePage(ScrewTurn.Wiki.PluginFramework.PageContent,System.String,System.String,System.DateTime,System.String,System.String,System.String[],System.String,ScrewTurn.Wiki.PluginFramework.SaveMode)">
            <summary>
            Updates a page.
            </summary>
            <param name="page">The page.</param>
            <param name="title">The page title.</param>
            <param name="username">The username of the user who created the page.</param>
            <param name="dateTime">The creation date/time.</param>
            <param name="comment">The comment (or <c>null</c>).</param>
            <param name="content">The page content.</param>
            <param name="keywords">The page keywords.</param>
            <param name="description">The page description.</param>
            <param name="saveMode">The saving mode.</param>
            <returns><c>true</c> if the page was updated, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/>, <paramref name="title"/>, <paramref name="username"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="title"/> or <paramref name="username"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RebindPage(ScrewTurn.Wiki.PluginFramework.PageContent,System.String[])">
            <summary>
            Rebinds a page to zero or more categories, completely removing existing bindings.
            </summary>
            <param name="page">The page to rebind.</param>
            <param name="categories">The categories to rebind to (must be in the same namespace).</param>
            <returns><c>true</c> if the page was rebound, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> or <paramref name="categories"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RenamePage(ScrewTurn.Wiki.PluginFramework.PageContent,System.String)">
            <summary>
            Renames a page.
            </summary>
            <param name="page">The page to rename.</param>
            <param name="newName">The new name (without the namespace)</param>
            <returns><c>true</c> if the page was renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="newName"/> is empty or if it is invalid.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RemovePage(ScrewTurn.Wiki.PluginFramework.PageContent)">
            <summary>
            Removes a page and all its related data.
            </summary>
            <param name="page">The page to remove.</param>
            <returns><c>true</c> if the page was removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.Format(System.String)">
            <summary>
            Formats a block of WikiMarkup, using the built-in formatter only.
            </summary>
            <param name="raw">The block of WikiMarkup.</param>
            <returns>The formatted content.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="raw"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.ListDirectories(ScrewTurn.Wiki.PluginFramework.StDirectoryInfo)">
            <summary>
            Lists directories in a directory.
            </summary>
            <param name="directory">The directory (<c>null</c> for the root, first invocation).</param>
            <returns>The directories.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.ListFiles(ScrewTurn.Wiki.PluginFramework.StDirectoryInfo)">
            <summary>
            Lists files in a directory.
            </summary>
            <param name="directory">The directory (<c>null</c> for the root, first invocation).</param>
            <returns>The files.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.StoreFile(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Stores a file.
            </summary>
            <param name="fullName">The file full path and name, for example '/directory/sub/file.jpg'.</param>
            <param name="source">The source stream.</param>
            <param name="overwrite">A value indicating whether to overwrite an existing file.</param>
            <returns>The created file, or <c>null</c> if no file was created.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> or <paramref name="source"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RetrieveFile(ScrewTurn.Wiki.PluginFramework.StFileInfo,System.IO.Stream)">
            <summary>
            Retrieves a file.
            </summary>
            <param name="file">The file to retrieve.</param>
            <param name="destination">The destination stream.</param>
            <returns><c>true</c> if the file was retrieved, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="file"/> or <paramref name="destination"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RenameFile(ScrewTurn.Wiki.PluginFramework.StFileInfo,System.String)">
            <summary>
            Renames a file.
            </summary>
            <param name="file">The file to rename.</param>
            <param name="newName">The new name (in the same folder).</param>
            <returns><c>true</c> if the file was renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="file"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="newName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.DeleteFile(ScrewTurn.Wiki.PluginFramework.StFileInfo)">
            <summary>
            Deletes a file.
            </summary>
            <param name="file">The file to delete.</param>
            <returns><c>true</c> if the file was deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="file"/> was <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.CreateDirectory(System.String,System.String)">
            <summary>
            Creates a new directory.
            </summary>
            <param name="path">The path of the container directory (the new directory will be created here).</param>
            <param name="name">The name of the new directory.</param>
            <returns><c>true</c> if the directory was created, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="path"/> or <paramref name="name"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RenameDirectory(ScrewTurn.Wiki.PluginFramework.StDirectoryInfo,System.String)">
            <summary>
            Renames a directory.
            </summary>
            <param name="directory">The directory to rename.</param>
            <param name="newName">The new directory name (without path).</param>
            <returns><c>true</c> if the directory was renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="directory"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="newName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.DeleteDirectory(ScrewTurn.Wiki.PluginFramework.StDirectoryInfo)">
            <summary>
            Deletes a directroy.
            </summary>
            <param name="directory">The directory to delete.</param>
            <returns><c>true</c> if the directory was deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="directory"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.ListPageAttachments(System.String)">
            <summary>
            Lists page attachments.
            </summary>
            <param name="pageFullName">The page.</param>
            <returns>The attachments.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.StorePageAttachment(System.String,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Stores a page attachment.
            </summary>
            <param name="pageFullName">The page full name.</param>
            <param name="name">The name of the attachment.</param>
            <param name="source">The source stream.</param>
            <param name="overwrite"><c>true</c> to overwrite an existing attachment with the same name, <c>false</c> otherwise.</param>
            <returns><c>true</c> if the attachment was stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/>, <paramref name="name"/> or <paramref name="source"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> or <paramref name="name"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RetrievePageAttachment(System.String,ScrewTurn.Wiki.PluginFramework.StFileInfo,System.IO.Stream)">
            <summary>
            Retrieves a page attachment.
            </summary>
            <param name="pageFullName">The page full name.</param>
            <param name="file">The attachment to retrieve.</param>
            <param name="destination">The destination stream.</param>
            <returns><c>true</c> if the file was retrieved, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/>, <paramref name="file"/> or <paramref name="destination"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RenamePageAttachment(System.String,ScrewTurn.Wiki.PluginFramework.StFileInfo,System.String)">
            <summary>
            Renames a page attachment.
            </summary>
            <param name="pageFullName">The full page name.</param>
            <param name="file">The attachment to rename.</param>
            <param name="newName">The new name of the attachment.</param>
            <returns><c>true</c> if the attachment was renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/>, <paramref name="file"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> or <paramref name="newName"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.DeletePageAttachment(System.String,ScrewTurn.Wiki.PluginFramework.StFileInfo)">
            <summary>
            Deletes a page attachment.
            </summary>
            <param name="pageFullName">The page full name.</param>
            <param name="file">The attachment to delete.</param>
            <returns><c>true</c> if the attachment was deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> or <paramref name="file"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.SendEmail(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Sends an Email.
            </summary>
            <param name="recipient">The Recipient Email address.</param>
            <param name="sender">The Sender's Email address.</param>
            <param name="subject">The Subject.</param>
            <param name="body">The Body.</param>
            <param name="html">True if the message is HTML.</param>
            <returns>True if the message has been sent successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="recipient"/>, <paramref name="sender"/>, <paramref name="subject"/> or <paramref name="body"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="recipient"/>, <paramref name="sender"/>, <paramref name="subject"/> or <paramref name="body"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.LogEntry(System.String,ScrewTurn.Wiki.PluginFramework.LogEntryType,System.String,System.Object,System.String)">
            <summary>
            Logs a new message.
            </summary>
            <param name="message">The Message.</param>
            <param name="entryType">The Entry Type.</param>
            <param name="user">The user, or <c>null</c>. If <c>null</c>, the system will log "PluginName+System".</param>
            <param name="caller">The Component that calls the method. The caller cannot be null.</param>
            <param name="wiki">The wiki or <c>null</c> for application-wide events.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="message"/> or <paramref name="caller"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="message"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.ChangeCurrentUserLanguage(System.String)">
            <summary>
            Changes the language of the current user.
            </summary>
            <param name="language">The language code.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.AlignDateTimeWithPreferences(System.DateTime)">
            <summary>
            Aligns a Date and Time object to the User's Time Zone preferences.
            </summary>
            <param name="dt">The Date/Time to align.</param>
            <returns>The aligned Date/Time.</returns>
            <remarks>The method takes care of daylight saving settings.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.AddToolbarItem(ScrewTurn.Wiki.PluginFramework.IProviderV40,ScrewTurn.Wiki.PluginFramework.ToolbarItem,System.String,System.String)">
            <summary>
            Adds an item in the Editing Toolbar.
            </summary>
            <param name="caller">The caller.</param>
            <param name="item">The item to add.</param>
            <param name="text">The text of the item showed in the toolbar.</param>
            <param name="value">The value of the item, placed in the content: if <b>item</b> is <b>ToolbarItem.SpecialTagWrap</b>, separate start and end tag with a pipe.</param>
            <returns>A token to use to remove the toolbar item with <see cref="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RemoveToolbarItem(System.String)"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="text"/> or <paramref name="value"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="text"/> or <paramref name="value"/> are empty, or if they contain single or double quotes, 
            or if <paramref name="value"/> does not contain a pipe when <paramref name="item"/> is <b>SpecialTagWrap</b>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RemoveToolbarItem(System.String)">
            <summary>
            Removes a toolbar item.
            </summary>
            <param name="token">The token returned by <see cref="M:ScrewTurn.Wiki.PluginFramework.IHostV40.AddToolbarItem(ScrewTurn.Wiki.PluginFramework.IProviderV40,ScrewTurn.Wiki.PluginFramework.ToolbarItem,System.String,System.String)"/>.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetDefaultProvider(System.Type)">
            <summary>
            Gets the default provider of the specified type.
            </summary>
            <param name="providerType">The type of the provider (
            <see cref="T:IPagesStorageProviderV40" />, 
            <see cref="T:IUsersStorageProviderV40" />, 
            <see cref="T:IFilesStorageProviderV40" />,
            <see cref="T:IFormatterProviderV40" />).</param>
            <returns>The Full type name of the default provider of the specified type or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetPagesStorageProviders">
            <summary>
            Gets the pages storage providers.
            </summary>
            <returns>The providers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetUsersStorageProviders">
            <summary>
            Gets the users storage providers.
            </summary>
            <returns>The providers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetFilesStorageProviders">
            <summary>
            Gets the files storage providers.
            </summary>
            <returns>The providers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetThemesProviders">
            <summary>
            Gets the theme providers.
            </summary>
            <returns>The providers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetFormatterProviders(System.Boolean)">
            <summary>
            Gets the formatter providers, either enabled or disabled.
            </summary>
            <param name="enabled"><c>true</c> to get enabled providers, <c>false</c> to get disabled providers.</param>
            <returns>The providers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetSettingsStorageProvider">
            <summary>
            Gets the current settings storage provider.
            </summary>
            <returns>The global settings storage provider.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetGlobalSettingsStorageProvider">
            <summary>
            Gets the current global settings storage provider.
            </summary>
            <returns>The global settings storage provider.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetProviderConfiguration(System.String)">
            <summary>
            Gets the configuration of a storage provider.
            </summary>
            <param name="providerTypeName">The type name of the provider, such as 'Vendor.Namespace.Provider'.</param>
            <returns>The configuration (can be empty or <c>null</c>).</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="providerTypeName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="providerTypeName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.GetPluginConfiguration(System.String)">
            <summary>
            Gets the configuration of a plugin(formatter provider).
            </summary>
            <param name="providerTypeName">The type name of the provider, such as 'Vendor.Namespace.Provider'.</param>
            <returns>The configuration (can be empty or <c>null</c>).</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="providerTypeName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="providerTypeName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.SetPluginConfiguration(ScrewTurn.Wiki.PluginFramework.IProviderV40,System.String)">
            <summary>
            Sets the configuration of a provider.
            </summary>
            <param name="provider">The provider of which to set the configuration.</param>
            <param name="configuration">The configuration to set.</param>
            <returns><c>true</c> if the configuration is set, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="provider"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.OverridePublicDirectory(System.String)">
            <summary>
            Overrides the public directory.
            </summary>
            <param name="fullPath">The new full path of the public directory.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullPath"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullPath"/> is empty.</exception>
            <exception cref="T:System.InvalidOperationException">If it's too late to override the public directory.</exception>
        </member>
        <member name="E:ScrewTurn.Wiki.PluginFramework.IHostV40.UserAccountActivity">
            <summary>
            Event fired whenever an activity is performed on a User Account.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.PluginFramework.IHostV40.UserGroupActivity">
            <summary>
            Event fired whenever an activity is performed on a user group.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.PluginFramework.IHostV40.NamespaceActivity">
            <summary>
            Event fired whenever an activity is performed on a namespace.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.PluginFramework.IHostV40.PageActivity">
            <summary>
            Even fired whenever an activity is performed on a Page.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.PluginFramework.IHostV40.FileActivity">
            <summary>
            Event fired whenever an activity is performed on a file, directory or attachment.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RegisterRequestHandler(ScrewTurn.Wiki.PluginFramework.IProviderV40,System.String,System.String[])">
            <summary>
            Registers a HTTP request handler (typically during the SetUp phase of a provider).
            </summary>
            <param name="caller">The caller.</param>
            <param name="urlRegex">The regular expression used to filter URLs to decide whether or not a request must be handled.</param>
            <param name="methods">The HTTP request methods to consider, such as GET and POST.</param>
            <returns>A token to use to unregister the handler (<see cref="M:ScrewTurn.Wiki.PluginFramework.IHostV40.UnregisterRequestHandler(System.String)"/>).</returns>
            <remarks>The <paramref name="urlRegex"/> will be treated as culture-invariant and case-insensitive.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.UnregisterRequestHandler(System.String)">
            <summary>
            Unregisters a request handler.
            </summary>
            <param name="token">The token returned by <see cref="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RegisterRequestHandler(ScrewTurn.Wiki.PluginFramework.IProviderV40,System.String,System.String[])"/>.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.AddHtmlHeadContent(ScrewTurn.Wiki.PluginFramework.IProviderV40,System.String)">
            <summary>
            Allows to inject content into the HTML head, like scripts and css (typically during the SetUp phase of a provider).
            </summary>
            <param name="caller">The caller.</param>
            <param name="content">The content to inject.</param>
            <returns>A token to use to remove the injected content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IHostV40.RemoveHtmlHeadContent(System.String)">
            <summary>
            Removes injected HTML head content.
            </summary>
            <param name="token">The token returned by <see cref="M:ScrewTurn.Wiki.PluginFramework.IHostV40.AddHtmlHeadContent(ScrewTurn.Wiki.PluginFramework.IProviderV40,System.String)"/>.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.RequestHandler">
            <summary>
            Defines a delegate for handling HTTP requests.
            </summary>
            <param name="context">The HTTP context.</param>
            <param name="match">The regular expression match.</param>
            <returns><c>true</c> if the request was handled, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.LogEntryType">
            <summary>
            Enumerates the Types of Log Entries.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.LogEntryType.General">
            <summary>
            Represents a simple Message.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.LogEntryType.Warning">
            <summary>
            Represents a Warning.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.LogEntryType.Error">
            <summary>
            Represents an Error.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.GlobalSettingName">
            <summary>
            Enumerates the Global Setting values' name.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.PublicDirectory">
            <summary>
            The Public directory.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.ContactEmail">
            <summary>
            The Contact Email.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.SenderEmail">
            <summary>
            The Sender Email.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.UsernameRegex">
            <summary>
            The regex used to validate usernames.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.PasswordRegex">
            <summary>
            The regex used to validate passwords.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.EmailRegex">
            <summary>
            The regex used to validate email addresses.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.MainUrlRegex">
            <summary>
            The regex used to validate the main Wiki URL.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.DisableAutomaticVersionCheck">
            <summary>
            A value (true/false) indicating whether to disable the automatic version check.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.EnableHttpCompression">
            <summary>
            A value (true/false) indicating whether to enable HTTP compression.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.EnableViewStateCompression">
            <summary>
            A value (true/false) indicating whether to enable View State compression.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.MaxFileSize">
            <summary>
            The max size for uploaded files (bytes).
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.PageExtension">
            <summary>
            The extension used for pages.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.WikiVersion">
            <summary>
            The version of the Wiki Engine.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.DefaultPagesStorageProvider">
            <summary>
            The default pages provider.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.DefaultUsersStorageProvider">
            <summary>
            The default users provider.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.DefaultFilesStorageProvider">
            <summary>
            The default files provider.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.LoggingLevel">
            <summary>
            The logging level.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.GlobalSettingName.MaxLogSize">
            <summary>
            The max size, in KB, of the log.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.SettingName">
            <summary>
            Enumerates the Setting values' names.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.WikiTitle">
            <summary>
            The Title of the Wiki.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.MainUrl">
            <summary>
            The Main URL of the Wiki.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.RootNamespaceDefaultPage">
            <summary>
            The default page of the root namespace.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.DateTimeFormat">
            <summary>
            The Date/Time format.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.DefaultLanguage">
            <summary>
            The default Language (for example <b>en-US</b>).
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.DefaultTimeZone">
            <summary>
            The default Time Zone (a string representing the shift in <b>minutes</b> respect to the Greenwich time, for example <b>-120</b>).
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.ThemesDirectory">
            <summary>
            The Themes directory.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.UsersCanRegister">
            <summary>
            A value (true/false) indicating whether users can create new accounts.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.EnableDoubleClickEditing">
            <summary>
            A value (true/false) indicating whether to activate page editing with a double click.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.ProcessSingleLineBreaks">
            <summary>
            A value (true/false) indicating whether to process single line breaks in WikiMarkup.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.AccountActivationMode">
            <summary>
            The account activation mode.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.AllowedFileTypes">
            <summary>
            The file types allowed for upload.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.DisableBreadcrumbsTrail">
            <summary>
            A value (true/false) indicating whether to disable the breadcrumbs trail.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.DisableCaptchaControl">
            <summary>
            A value (true/false) indicating whether to disable the captcha control in public functionalities.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.DisableConcurrentEditing">
            <summary>
            A value (true/false) indicating whether to disable concurrent page editing.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.ScriptTagsAllowed">
            <summary>
            A value (true/false) indicating whether to SCRIPT tags are allowed in WikiMarkup.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.MaxRecentChanges">
            <summary>
            The max number of recent changes to log.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.EditingSessionTimeout">
            <summary>
            The timeout, in seconds, after which a page editing session is considered to be dead.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.AdministratorsGroup">
            <summary>
            The default administrators group.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.UsersGroup">
            <summary>
            The default users group.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.AnonymousGroup">
            <summary>
            The default anonymous users group.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.ChangeModerationMode">
            <summary>
            The page change moderation mode.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.RootNamespaceTheme">
            <summary>
            The name of the theme of the root namespace.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SettingName.ListSize">
            <summary>
            The number of items to display in lists of items before enabling paging.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.ToolbarItem">
            <summary>
            Enumerates the toolbar items that can be added.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.ToolbarItem.SpecialTag">
            <summary>
            A Special Tag that is inserted in the text.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.ToolbarItem.SpecialTagWrap">
            <summary>
            A special tag that wraps the selected text.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.IIndexDirectoryProviderV40">
            <summary>
            It is the interface that must be implemented in order to create a custom Index Directory Provider for ScrewTurn Wiki search engine.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IIndexDirectoryProviderV40.GetDirectory">
            <summary>
            Gets the directory object to be used by the Search engine.
            </summary>
            <returns>The directory object.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40">
            <summary>
            It is the interface that must be implemented in order to create a custom Pages Storage Provider for ScrewTurn Wiki.
            </summary>
            <remarks>A class that implements this interface <b>should not</b> have any kind of data caching.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetNamespace(System.String)">
            <summary>
            Gets a namespace.
            </summary>
            <param name="name">The name of the namespace.</param>
            <returns>The <see cref="T:NamespaceInfo" />, or <c>null</c> if no namespace is found.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetNamespaces">
            <summary>
            Gets all the sub-namespaces.
            </summary>
            <returns>The sub-namespaces, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.AddNamespace(System.String)">
            <summary>
            Adds a new namespace.
            </summary>
            <param name="name">The name of the namespace.</param>
            <returns>The correct <see cref="T:NamespaceInfo" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RenameNamespace(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String)">
            <summary>
            Renames a namespace.
            </summary>
            <param name="nspace">The namespace to rename.</param>
            <param name="newName">The new name of the namespace.</param>
            <returns>The correct <see cref="T:NamespaceInfo" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="nspace"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="newName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.SetNamespaceDefaultPage(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String)">
            <summary>
            Sets the default page of a namespace.
            </summary>
            <param name="nspace">The namespace of which to set the default page.</param>
            <param name="pageFullName">The full name of the page to use as default page, or <c>null</c>.</param>
            <returns>The correct <see cref="T:NamespaceInfo" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="nspace"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RemoveNamespace(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Removes a namespace.
            </summary>
            <param name="nspace">The namespace to remove.</param>
            <returns><c>true</c> if the namespace is removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="nspace"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.MovePage(System.String,ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.Boolean)">
            <summary>
            Moves a page from its namespace into another.
            </summary>
            <param name="pageFullName">The full name of the page to move.</param>
            <param name="destination">The destination namespace (<c>null</c> for the root).</param>
            <param name="copyCategories">A value indicating whether to copy the page categories in the destination 
            namespace, if not already available.</param>
            <returns>The correct instance of <see cref="T:PageContent" />.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetCategory(System.String)">
            <summary>
            Gets a category.
            </summary>
            <param name="fullName">The full name of the category.</param>
            <returns>The <see cref="T:CategoryInfo" />, or <c>null</c> if no category is found.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName" /> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName" /> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetCategories(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the Categories in a namespace.
            </summary>
            <param name="nspace">The namespace.</param>
            <returns>All the Categories in the namespace, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetCategoriesForPage(System.String)">
            <summary>
            Gets all the categories of a page.
            </summary>
            <param name="pageFullName">The full name of the page.</param>
            <returns>The categories, sorted by name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.AddCategory(System.String,System.String)">
            <summary>
            Adds a Category.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Category name.</param>
            <returns>The correct CategoryInfo object.</returns>
            <remarks>The method should set category's Pages to an empty array.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RenameCategory(ScrewTurn.Wiki.PluginFramework.CategoryInfo,System.String)">
            <summary>
            Renames a Category.
            </summary>
            <param name="category">The Category to rename.</param>
            <param name="newName">The new Name.</param>
            <returns>The correct CategoryInfo object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="category"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="newName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RemoveCategory(ScrewTurn.Wiki.PluginFramework.CategoryInfo)">
            <summary>
            Removes a Category.
            </summary>
            <param name="category">The Category to remove.</param>
            <returns>True if the Category has been removed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="category"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.MergeCategories(ScrewTurn.Wiki.PluginFramework.CategoryInfo,ScrewTurn.Wiki.PluginFramework.CategoryInfo)">
            <summary>
            Merges two Categories.
            </summary>
            <param name="source">The source Category.</param>
            <param name="destination">The destination Category.</param>
            <returns>The correct <see cref="T:CategoryInfo" /> object.</returns>
            <remarks>The destination Category remains, while the source Category is deleted, and all its Pages re-bound 
            in the destination Category.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="source"/> or <paramref name="destination"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RebindPage(System.String,System.String[])">
            <summary>
            Binds a Page with one or more Categories.
            </summary>
            <param name="pageFullName">The full name of the page to bind.</param>
            <param name="categories">The Categories to bind the Page with.</param>
            <returns>True if the binding succeeded.</returns>
            <remarks>After a successful operation, the Page is bound with all and only the categories passed as argument.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> or <paramref name="categories"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetPage(System.String)">
            <summary>
            Gets a page.
            </summary>
            <param name="fullName">The full name of the page.</param>
            <returns>The <see cref="T:PageContent" />, or <c>null</c> if no page is found.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetPages(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the Pages in a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>All the Pages in the namespace, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetUncategorizedPages(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the pages in a namespace that are bound to zero categories.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The pages, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetDraft(System.String)">
            <summary>
            Gets the content of a draft of a Page.
            </summary>
            <param name="fullName">The full name of the page.</param>
            <returns>The draft, or <c>null</c> if no draft exists.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.DeleteDraft(System.String)">
            <summary>
            Deletes a draft of a Page.
            </summary>
            <param name="fullName">The full name of the page.</param>
            <returns><c>true</c> if the draft is deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetBackups(System.String)">
            <summary>
            Gets the Backup/Revision numbers of a Page.
            </summary>
            <param name="fullName">The full name of the page to get the Backups of.</param>
            <returns>The Backup/Revision numbers.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetBackupContent(System.String,System.Int32)">
            <summary>
            Gets the Content of a Backup of a Page.
            </summary>
            <param name="fullName">The full name of the page to get the backup of.</param>
            <param name="revision">The Backup/Revision number.</param>
            <returns>The Page Backup.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="revision"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.SetBackupContent(ScrewTurn.Wiki.PluginFramework.PageContent,System.Int32)">
            <summary>
            Forces to overwrite or create a Backup.
            </summary>
            <param name="content">The Backup content.</param>
            <param name="revision">The revision.</param>
            <returns>True if the Backup has been created successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="content"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="revision"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.SetPageContent(System.String,System.String,System.DateTime,System.String,System.String,System.DateTime,System.String,System.String,System.String[],System.String,ScrewTurn.Wiki.PluginFramework.SaveMode)">
            <summary>
            Adds a new page content.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="pageName">The Page Name.</param>
            <param name="creationDateTime">The creation Date/Time.</param>
            <param name="title">The Title of the Page.</param>
            <param name="username">The Username.</param>
            <param name="dateTime">The Date/Time.</param>
            <param name="comment">The Comment of the editor, about this revision.</param>
            <param name="content">The Page Content.</param>
            <param name="keywords">The keywords, usually used for SEO.</param>
            <param name="description">The description, usually used for SEO.</param>
            <param name="saveMode">The save mode for this modification.</param>
            <returns>The correct PageInfo object or null.</returns>
            <remarks>This method should <b>not</b> create the content of the Page.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageName"/>, <paramref name="title"/> <paramref name="username"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageName"/>, <paramref name="title"/> or <paramref name="username"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RenamePage(System.String,System.String)">
            <summary>
            Renames a Page.
            </summary>
            <param name="fullName">The full name of the page to rename.</param>
            <param name="newName">The new Name.</param>
            <returns>The correct <see cref="T:PageContent" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> or <paramref name="newName"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RollbackPage(System.String,System.Int32)">
            <summary>
            Performs the rollback of a Page to a specified revision.
            </summary>
            <param name="pageFullName">The full name of the page to rollback.</param>
            <param name="revision">The Revision to rollback the Page to.</param>
            <returns><c>true</c> if the rollback succeeded, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="revision"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.DeleteBackups(System.String,System.Int32)">
            <summary>
            Deletes the Backups of a Page, up to a specified revision.
            </summary>
            <param name="pageFullName">The full name of the page to delete the backups of.</param>
            <param name="revision">The newest revision to delete (newer revision are kept) or -1 to delete all the Backups.</param>
            <returns><c>true</c> if the deletion succeeded, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="revision"/> is less than -1.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RemovePage(System.String)">
            <summary>
            Removes a Page.
            </summary>
            <param name="pageFullName">The full name of the page to remove.</param>
            <returns>True if the Page is removed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetMessages(System.String)">
            <summary>
            Gets the Page Messages.
            </summary>
            <param name="pageFullName">The page full name.</param>
            <returns>The list of the <b>first-level</b> Messages, containing the replies properly nested, sorted by date/time.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetMessageCount(System.String)">
            <summary>
            Gets the total number of Messages in a Page Discussion.
            </summary>
            <param name="pageFullName">The page full name.</param>
            <returns>The number of messages.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.BulkStoreMessages(System.String,ScrewTurn.Wiki.PluginFramework.Message[])">
            <summary>
            Removes all messages for a page and stores the new messages.
            </summary>
            <param name="pageFullName">The full name of the page.</param>
            <param name="messages">The new messages to store.</param>
            <returns><c>true</c> if the messages are stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> or <paramref name="messages"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.AddMessage(System.String,System.String,System.String,System.DateTime,System.String,System.Int32)">
            <summary>
            Adds a new Message to a Page.
            </summary>
            <param name="pageFullName">The full name of the page.</param>
            <param name="username">The Username.</param>
            <param name="subject">The Subject.</param>
            <param name="dateTime">The Date/Time.</param>
            <param name="body">The Body.</param>
            <param name="parent">The Parent Message ID, or -1.</param>
            <returns>The id of the message. Returns -1 in case of errors.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/>, <paramref name="username"/>, <paramref name="subject"/> or <paramref name="body"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="username"/> or <paramref name="subject"/> or <paramref name="pageFullName"/> are empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="parent"/> is less than -1.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RemoveMessage(System.String,System.Int32,System.Boolean)">
            <summary>
            Removes a Message.
            </summary>
            <param name="pageFullName">The full name of the page.</param>
            <param name="id">The ID of the Message to remove.</param>
            <param name="removeReplies">A value specifying whether or not to remove the replies.</param>
            <returns>True if the Message is removed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageFullName"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="id"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.ModifyMessage(System.String,System.Int32,System.String,System.String,System.DateTime,System.String)">
            <summary>
            Modifies a Message.
            </summary>
            <param name="pageFullName">The Page.</param>
            <param name="id">The ID of the Message to modify.</param>
            <param name="username">The Username.</param>
            <param name="subject">The Subject.</param>
            <param name="dateTime">The Date/Time.</param>
            <param name="body">The Body.</param>
            <returns>True if the Message is modified successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageFullName"/>, <paramref name="username"/>, <paramref name="subject"/> or <paramref name="body"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="id"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="username"/> or <paramref name="subject"/> or <paramref name="pageFullName"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetNavigationPaths(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the Navigation Paths in a Namespace.
            </summary>
            <param name="nspace">The Namespace.</param>
            <returns>All the Navigation Paths, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.AddNavigationPath(System.String,System.String,System.String[])">
            <summary>
            Adds a new Navigation Path.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Name of the Path.</param>
            <param name="pages">The full name of the pages array.</param>
            <returns>The correct <see cref="T:NavigationPath" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="pages"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> or <paramref name="pages"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.ModifyNavigationPath(ScrewTurn.Wiki.PluginFramework.NavigationPath,System.String[])">
            <summary>
            Modifies an existing navigation path.
            </summary>
            <param name="path">The navigation path to modify.</param>
            <param name="pages">The new pages full names array.</param>
            <returns>The correct <see cref="T:NavigationPath" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="path"/> or <paramref name="pages"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pages"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RemoveNavigationPath(ScrewTurn.Wiki.PluginFramework.NavigationPath)">
            <summary>
            Removes a Navigation Path.
            </summary>
            <param name="path">The navigation path to remove.</param>
            <returns><c>true</c> if the path is removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="path"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetSnippets">
            <summary>
            Gets all the snippets.
            </summary>
            <returns>All the snippets, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.AddSnippet(System.String,System.String)">
            <summary>
            Adds a new snippet.
            </summary>
            <param name="name">The name of the snippet.</param>
            <param name="content">The content of the snippet.</param>
            <returns>The correct <see cref="T:Snippet" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.ModifySnippet(System.String,System.String)">
            <summary>
            Modifies an existing snippet.
            </summary>
            <param name="name">The name of the snippet to modify.</param>
            <param name="content">The content of the snippet.</param>
            <returns>The correct <see cref="T:Snippet" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RemoveSnippet(System.String)">
            <summary>
            Removes a new Snippet.
            </summary>
            <param name="name">The Name of the Snippet to remove.</param>
            <returns><c>true</c> if the snippet is removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.GetContentTemplates">
            <summary>
            Gets all the content templates.
            </summary>
            <returns>All the content templates, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.AddContentTemplate(System.String,System.String)">
            <summary>
            Adds a new content template.
            </summary>
            <param name="name">The name of template.</param>
            <param name="content">The content of the template.</param>
            <returns>The correct <see cref="T:ContentTemplate" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.ModifyContentTemplate(System.String,System.String)">
            <summary>
            Modifies an existing content template.
            </summary>
            <param name="name">The name of the template to modify.</param>
            <param name="content">The content of the template.</param>
            <returns>The correct <see cref="T:ContentTemplate" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40.RemoveContentTemplate(System.String)">
            <summary>
            Removes a content template.
            </summary>
            <param name="name">The name of the template to remove.</param>
            <returns><c>true</c> if the template is removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.SaveMode">
            <summary>
            Lists legal saving modes.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SaveMode.Normal">
            <summary>
            Save the content.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SaveMode.Backup">
            <summary>
            Backup the previous content, then save the current content.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.SaveMode.Draft">
            <summary>
            Save the content as draft.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.IProviderV40">
            <summary>
            The base interface that all the Providers must implement. All the Provider Type-specific interfaces inherit from this one or from a one, either directly or from a derived interface.
            </summary>
            <remarks>This interface should not be implemented directly by a class.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IProviderV40.CurrentWiki">
            <summary>
            Gets the wiki that has been used to initialize the current instance of the provider.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IProviderV40.Init(ScrewTurn.Wiki.PluginFramework.IHostV40,System.String,System.String)">
            <summary>
            Initializes the Storage Provider.
            </summary>
            <param name="wiki">The wiki.</param>
            <param name="host">The Host of the Component.</param>
            <param name="config">The Configuration data, if any.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="host"/> or <paramref name="config"/> are <c>null</c>.</exception>
            <exception cref="T:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException">If <paramref name="config"/> is not valid or is incorrect.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IProviderV40.SetUp(ScrewTurn.Wiki.PluginFramework.IHostV40,System.String)">
            <summary>
            Sets up the Storage Provider.
            </summary>
            <param name="host">The Host of the Component.</param>
            <param name="config">The Configuration data, if any.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="host"/> or <paramref name="config"/> are <c>null</c>.</exception>
            <exception cref="T:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException">If <paramref name="config"/> is not valid or is incorrect.</exception>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IProviderV40.Information">
            <summary>
            Gets the Information about the Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IProviderV40.ConfigHelpHtml">
            <summary>
            Gets a brief summary of the configuration string format, in HTML. Returns <c>null</c> if no configuration is needed.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException">
            <summary>
            Represents errors that occur while decoding the Provider's Configuration String.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException.#ctor">
            <summary>
            Initializes a new instance of the <b>InvalidConfigurationException</b> class.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>InvalidConfigurationException</b> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <b>InvalidConfigurationException</b> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner Exception.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <b>InvalidConfigurationException</b> class.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40">
            <summary>
            The interface that must be implemented in order to create a custom Settings and Log Storage Provider for ScrewTurn Wiki.
            </summary>
            <remarks>A class that implements this interface <b>should</b> have some kind of data caching.
            The Provider <b>should not</b> use the method <see cref="M:IHost.GetSettingValue" /> during the execution of 
            the <see cref="M:ISettingsStorageProvider.Init" /> method, nor access the wiki log.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.GetSetting(System.String)">
            <summary>
            Retrieves the value of a Setting.
            </summary>
            <param name="name">The name of the Setting.</param>
            <returns>The value of the Setting, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.SetSetting(System.String,System.String)">
            <summary>
            Stores the value of a Setting.
            </summary>
            <param name="name">The name of the Setting.</param>
            <param name="value">The value of the Setting. Value cannot contain CR and LF characters, which will be removed.</param>
            <returns>True if the Setting is stored, false otherwise.</returns>
            <remarks>This method stores the Value immediately.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.GetAllSettings">
            <summary>
            Gets the all the setting values.
            </summary>
            <returns>All the settings.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.BeginBulkUpdate">
            <summary>
            Starts a Bulk update of the Settings so that a bulk of settings can be set before storing them.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.EndBulkUpdate">
            <summary>
            Ends a Bulk update of the Settings and stores the settings.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.SetPluginStatus(System.String,System.Boolean)">
            <summary>
            Sets the status of a plugin.
            </summary>
            <param name="typeName">The Type name of the plugin.</param>
            <param name="enabled">The plugin status.</param>
            <returns><c>true</c> if the status is stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="typeName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="typeName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.GetPluginStatus(System.String)">
            <summary>
            Gets the status of a plugin.
            </summary>
            <param name="typeName">The Type name of the plugin.</param>
            <returns>The status (<c>false</c> for disabled, <c>true</c> for enabled), or <c>true</c> if no status is found.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="typeName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="typeName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.SetPluginConfiguration(System.String,System.String)">
            <summary>
            Sets the configuration of a plugin.
            </summary>
            <param name="typeName">The Type name of the plugin.</param>
            <param name="config">The configuration.</param>
            <returns><c>true</c> if the configuration is stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="typeName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="typeName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.GetPluginConfiguration(System.String)">
            <summary>
            Gets the configuration of a plugin.
            </summary>
            <param name="typeName">The Type name of the plugin.</param>
            <returns>The plugin configuration, or <b>String.Empty</b>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="typeName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="typeName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.GetMetaDataItem(ScrewTurn.Wiki.PluginFramework.MetaDataItem,System.String)">
            <summary>
            Gets a meta-data item's content.
            </summary>
            <param name="item">The item.</param>
            <param name="tag">The tag that specifies the context (usually the namespace).</param>
            <returns>The content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.SetMetaDataItem(ScrewTurn.Wiki.PluginFramework.MetaDataItem,System.String,System.String)">
            <summary>
            Sets a meta-data items' content.
            </summary>
            <param name="item">The item.</param>
            <param name="tag">The tag that specifies the context (usually the namespace).</param>
            <param name="content">The content.</param>
            <returns><c>true</c> if the content is set, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.GetRecentChanges">
            <summary>
            Gets the recent changes of the Wiki.
            </summary>
            <returns>The recent Changes, oldest to newest.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.AddRecentChange(System.String,System.String,System.String,System.DateTime,System.String,ScrewTurn.Wiki.PluginFramework.Change,System.String)">
            <summary>
            Adds a new change.
            </summary>
            <param name="page">The page name.</param>
            <param name="title">The page title.</param>
            <param name="messageSubject">The message subject (or <c>null</c>).</param>
            <param name="dateTime">The date/time.</param>
            <param name="user">The user.</param>
            <param name="change">The change.</param>
            <param name="descr">The description (optional).</param>
            <returns><c>true</c> if the change is saved, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/>, <paramref name="title"/> or <paramref name="user"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="page"/>, <paramref name="title"/> or <paramref name="user"/> are empty.</exception>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.AclManager">
            <summary>
            Gets the ACL Manager instance.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.StoreOutgoingLinks(System.String,System.String[])">
            <summary>
            Stores the outgoing links of a page, overwriting existing data.
            </summary>
            <param name="page">The full name of the page.</param>
            <param name="outgoingLinks">The full names of the pages that <b>page</b> links to.</param>
            <returns><c>true</c> if the outgoing links are stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> or <paramref name="outgoingLinks"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="page"/> or <paramref name="outgoingLinks"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.GetOutgoingLinks(System.String)">
            <summary>
            Gets the outgoing links of a page.
            </summary>
            <param name="page">The full name of the page.</param>
            <returns>The outgoing links.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="page"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.GetAllOutgoingLinks">
            <summary>
            Gets all the outgoing links stored.
            </summary>
            <returns>The outgoing links, in a dictionary in the form page->outgoing_links.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.DeleteOutgoingLinks(System.String)">
            <summary>
            Deletes the outgoing links of a page and all the target links that include the page.
            </summary>
            <param name="page">The full name of the page.</param>
            <returns><c>true</c> if the links are deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="page"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.UpdateOutgoingLinksForRename(System.String,System.String)">
            <summary>
            Updates all outgoing links data for a page rename.
            </summary>
            <param name="oldName">The old page name.</param>
            <param name="newName">The new page name.</param>
            <returns><c>true</c> if the data is updated, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="oldName"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="oldName"/> or <paramref name="newName"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV40.IsFirstApplicationStart">
            <summary>
            Determines whether the wiki was started for the first time.
            </summary>
            <returns><c>true</c> if the wiki was started for the first time, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.MetaDataItem">
            <summary>
            Lists legal meta-data items (global items have a integer value greater than or equal to 100.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.AccountActivationMessage">
            <summary>
            The account activation message which is sent to the newly registered users.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.PasswordResetProcedureMessage">
            <summary>
            The password reset message which is sent to the users who reset their password.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.LoginNotice">
            <summary>
            The notice that appears and replaces the text in the Login page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.AccessDeniedNotice">
            <summary>
            The notice that appears and replaces the text in the Access Denied page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.PageChangeMessage">
            <summary>
            The message that is sent when a page is modified.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.DiscussionChangeMessage">
            <summary>
            The message that is sent when a new message is posted on a discussion.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.ApproveDraftMessage">
            <summary>
            The message sent when a page draft requires approval.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.RegisterNotice">
            <summary>
            The notice that appears and replates the text in the Register page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.EditNotice">
            <summary>
            The notice that appears in the editing page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.Footer">
            <summary>
            The wiki footer.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.Header">
            <summary>
            The wiki header.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.HtmlHead">
            <summary>
            The custom content of the HTML Head tag.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.PageFooter">
            <summary>
            The pages footer.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.PageHeader">
            <summary>
            The pages header.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.MetaDataItem.Sidebar">
            <summary>
            The content of the sidebar.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.IStorageProviderV40">
            <summary>
            The base interface that all the Storage Providers must implement. All the Provider Type-specific interfaces inherit from this one or from a one, either directly or from a derived interface
            </summary>
            <remarks>This interface should not be implemented directly by a class.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IStorageProviderV40.ReadOnly">
            <summary>
            Gets a value specifying whether the provider is read-only, i.e. it can only provide data and not store it.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.IThemesStorageProviderV40">
            <summary>
            The interface that must be implemented in order to create a custom Theme Storage Provider for ScrewTurn Wiki.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IThemesStorageProviderV40.ListThemes">
            <summary>
            Retrives the lists of avaiable themes.
            </summary>
            <returns>A list of theme names.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IThemesStorageProviderV40.ListThemeFiles(System.String,System.String)">
            <summary>
            Retrieves all files present in the selected theme.
            </summary>
            <param name="themeName">The name of the selected theme.</param>
            <param name="searchPattern">The search string to match against the name of files.</param>
            <returns>The list of files matching the searchPattern.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IThemesStorageProviderV40.StoreTheme(System.String,System.Byte[])">
            <summary>
            Stores the theme.
            </summary>
            <param name="themeName">The name of the theme.</param>
            <param name="zipFile">The zipFile conteining the theme.</param>
            <returns><c>true</c> if the theme is saved, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IThemesStorageProviderV40.DeleteTheme(System.String)">
            <summary>
            Deletes the theme with the given name.
            </summary>
            <param name="themeName">The name of the theme to be deleted.</param>
            <returns><c>true</c> if the theme is removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IThemesStorageProviderV40.GetThemePath(System.String)">
            <summary>
            Gets the relative path of the theme with the given name.
            </summary>
            <param name="themeName">The name of the theme.</param>
            <returns>The relative path of the theme.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40">
            <summary>
            It is the interface that must be implemented in order to create a custom Users Storage Provider for ScrewTurn Wiki.
            </summary>
            <remarks>A class that implements this class <b>should not</b> have any kind of data caching.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.TestAccount(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String)">
            <summary>
            Tests a Password for a User account.
            </summary>
            <param name="user">The User account.</param>
            <param name="password">The Password to test.</param>
            <returns>True if the Password is correct.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> or <paramref name="password"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.GetUsers">
            <summary>
            Gets the complete list of Users.
            </summary>
            <returns>All the Users, sorted by username.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.AddUser(System.String,System.String,System.String,System.String,System.Boolean,System.DateTime)">
            <summary>
            Adds a new User.
            </summary>
            <param name="username">The Username.</param>
            <param name="displayName">The display name (can be <c>null</c>).</param>
            <param name="password">The Password.</param>
            <param name="email">The Email address.</param>
            <param name="active">A value indicating whether the account is active.</param>
            <param name="dateTime">The Account creation Date/Time.</param>
            <returns>The correct <see cref="T:UserInfo" /> object or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="username"/>, <paramref name="password"/> or <paramref name="email"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="username"/>, <paramref name="password"/> or <paramref name="email"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.ModifyUser(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Modifies a User.
            </summary>
            <param name="user">The Username of the user to modify.</param>
            <param name="newDisplayName">The new display name (can be <c>null</c>).</param>
            <param name="newPassword">The new Password (<c>null</c> or blank to keep the current password).</param>
            <param name="newEmail">The new Email address.</param>
            <param name="newActive">A value indicating whether the account is active.</param>
            <returns>The correct <see cref="T:UserInfo" /> object or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> or <paramref name="newEmail"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="newEmail"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.RemoveUser(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Removes a User.
            </summary>
            <param name="user">The User to remove.</param>
            <returns>True if the User has been removed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.GetUserGroups">
            <summary>
            Gets all the user groups.
            </summary>
            <returns>All the groups, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.AddUserGroup(System.String,System.String)">
            <summary>
            Adds a new user group.
            </summary>
            <param name="name">The name of the group.</param>
            <param name="description">The description of the group.</param>
            <returns>The correct <see cref="T:UserGroup" /> object or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="description"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.ModifyUserGroup(ScrewTurn.Wiki.PluginFramework.UserGroup,System.String)">
            <summary>
            Modifies a user group.
            </summary>
            <param name="group">The group to modify.</param>
            <param name="description">The new description of the group.</param>
            <returns>The correct <see cref="T:UserGroup" /> object or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="group"/> or <paramref name="description"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.RemoveUserGroup(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Removes a user group.
            </summary>
            <param name="group">The group to remove.</param>
            <returns><c>true</c> if the group is removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="group"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.SetUserMembership(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String[])">
            <summary>
            Sets the group memberships of a user account.
            </summary>
            <param name="user">The user account.</param>
            <param name="groups">The groups the user account is member of.</param>
            <returns>The correct <see cref="T:UserGroup" /> object or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> or <paramref name="groups"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.TryManualLogin(System.String,System.String)">
            <summary>
            Tries to login a user directly through the provider.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>The correct UserInfo object, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="username"/> or <paramref name="password"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.TryAutoLogin(System.Web.HttpContext)">
            <summary>
            Tries to login a user directly through the provider using 
            the current HttpContext and without username/password.
            </summary>
            <param name="context">The current HttpContext.</param>
            <returns>The correct UserInfo object, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="context"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.GetUser(System.String)">
            <summary>
            Gets a user account.
            </summary>
            <param name="username">The username.</param>
            <returns>The <see cref="T:UserInfo" />, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="username"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="username"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.GetUserByEmail(System.String)">
            <summary>
            Gets a user account.
            </summary>
            <param name="email">The email address.</param>
            <returns>The first user found with the specified email address, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="email"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="email"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.NotifyCookieLogin(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Notifies the provider that a user has logged in through the authentication cookie.
            </summary>
            <param name="user">The user who has logged in.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.NotifyLogout(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Notifies the provider that a user has logged out.
            </summary>
            <param name="user">The user who has logged out.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.StoreUserData(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String,System.String)">
            <summary>
            Stores a user data element, overwriting the previous one if present.
            </summary>
            <param name="user">The user the data belongs to.</param>
            <param name="key">The key of the data element (case insensitive).</param>
            <param name="value">The value of the data element, <c>null</c> for deleting the data.</param>
            <returns><c>true</c> if the data element is stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> or <paramref name="key"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.RetrieveUserData(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String)">
            <summary>
            Gets a user data element, if any.
            </summary>
            <param name="user">The user the data belongs to.</param>
            <param name="key">The key of the data element.</param>
            <returns>The value of the data element, or <c>null</c> if the element is not found.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> or <paramref name="key"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.RetrieveAllUserData(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Retrieves all the user data elements for a user.
            </summary>
            <param name="user">The user.</param>
            <returns>The user data elements (key->value).</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.GetUsersWithData(System.String)">
            <summary>
            Gets all the users that have the specified element in their data.
            </summary>
            <param name="key">The key of the data.</param>
            <returns>The users and the data.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.UserAccountsReadOnly">
            <summary>
            Gets a value indicating whether user accounts are read-only.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.UserGroupsReadOnly">
            <summary>
            Gets a value indicating whether user groups are read-only. If so, the provider 
            should support default user groups as defined in the wiki configuration.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.GroupMembershipReadOnly">
            <summary>
            Gets a value indicating whether group membership is read-only (if <see cref="P:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.UserAccountsReadOnly" /> 
            is <c>false</c>, then this property must be <c>false</c>). If this property is <c>true</c>, the provider 
            should return membership data compatible with default user groups.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40.UsersDataReadOnly">
            <summary>
            Gets a value indicating whether users' data is read-only.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.Message">
            <summary>
            Represents a Page Discussion Message.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Message.id">
            <summary>
            The Message ID.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Message.username">
            <summary>
            The Username.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Message.subject">
            <summary>
            The Subject.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Message.dateTime">
            <summary>
            The Date/Time.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Message.body">
            <summary>
            The Body.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Message.replies">
            <summary>
            The Replies.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.Message.#ctor(System.Int32,System.String,System.String,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the <b>Message</b> class.
            </summary>
            <param name="id">The ID of the Message.</param>
            <param name="username">The Username of the User.</param>
            <param name="subject">The Subject of the Message.</param>
            <param name="dateTime">The Date/Time of the Message.</param>
            <param name="body">The body of the Message.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Message.ID">
            <summary>
            Gets or sets the Message ID.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Message.Username">
            <summary>
            Gets or sets the Username.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Message.Subject">
            <summary>
            Gets or sets the Subject.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Message.DateTime">
            <summary>
            Gets or sets the Date/Time.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Message.Body">
            <summary>
            Gets or sets the Body.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Message.Replies">
            <summary>
            Gets or sets the Replies.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.MessageDateTimeComparer">
            <summary>
            Compares two Message object using their Date/Time as parameter.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.MessageDateTimeComparer.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <b>MessageDateTimeComparer</b> class.
            </summary>
            <param name="reverse">True to compare in reverse order (bigger to smaller).</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.MessageDateTimeComparer.Compare(ScrewTurn.Wiki.PluginFramework.Message,ScrewTurn.Wiki.PluginFramework.Message)">
            <summary>
            Compares two Message objects.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>The result of the comparison (1, 0 or -1).</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.NamespaceActivityEventArgs">
            <summary>
            Contains arguments for Namespace activity events.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.NamespaceActivityEventArgs.#ctor(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,ScrewTurn.Wiki.PluginFramework.NamespaceActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:NamespaceActivityEventArgs" /> class.
            </summary>
            <param name="nspace">The namespace the activity refers to.</param>
            <param name="nspaceOldName">The old name of the renamed namespace, or <c>null</c>.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.NamespaceActivityEventArgs.NamespaceInfo">
            <summary>
            Gets the namespace the activity refers to.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.NamespaceActivityEventArgs.NamespaceOldName">
            <summary>
            Gets the old name of the renamed namespace, or <c>null</c>.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.NamespaceActivityEventArgs.Activity">
            <summary>
            Gets the activity.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.NamespaceActivity">
            <summary>
            Lists legal namespace activity types.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NamespaceActivity.NamespaceAdded">
            <summary>
            A namespace has been added.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NamespaceActivity.NamespaceRenamed">
            <summary>
            A namespace has been renamed.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NamespaceActivity.NamespaceModified">
            <summary>
            A namespace has been modified.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NamespaceActivity.NamespaceRemoved">
            <summary>
            A namespace has been removed.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.NameTools">
            <summary>
            Implements useful tools for handling full object names.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.NameTools.GetFullName(System.String,System.String)">
            <summary>
            Gets the full name of a page from the namespace and local name.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <param name="name">The local name.</param>
            <returns>The full name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.NameTools.ExpandFullName(System.String,System.String@,System.String@)">
            <summary>
            Expands a full name into the namespace and local name.
            </summary>
            <param name="fullName">The full name to expand.</param>
            <param name="nspace">The namespace.</param>
            <param name="name">The local name.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.NameTools.GetNamespace(System.String)">
            <summary>
            Extracts the namespace from a full name.
            </summary>
            <param name="fullName">The full name.</param>
            <returns>The namespace, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.NameTools.GetLocalName(System.String)">
            <summary>
            Extracts the local name from a full name.
            </summary>
            <param name="fullName">The full name.</param>
            <returns>The local name.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.NamespaceInfo">
            <summary>
            Represents a namespace.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NamespaceInfo.name">
            <summary>
            The name of the namespace.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NamespaceInfo.provider">
            <summary>
            The provider of the namespace.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NamespaceInfo.defaultPageFullName">
            <summary>
            The full name of the default page of the namespace (can be <c>null</c>).
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.NamespaceInfo.#ctor(System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NamespaceInfo" /> class.
            </summary>
            <param name="name">The namespace name.</param>
            <param name="provider">The provider.</param>
            <param name="defaultPageFullName">The full name of the default page, or <c>null</c>.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.NamespaceInfo.Name">
            <summary>
            Gets or sets the name of the namespace.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.NamespaceInfo.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.NamespaceInfo.DefaultPageFullName">
            <summary>
            Gets or sets the full name of the default page, or <c>null</c>.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.NamespaceInfo.ToString">
            <summary>
            Gets a string representation of the current object.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.NamespaceComparer">
            <summary>
            Compares two <see cref="T:NamespaceInfo" /> objects, using the Name as parameter.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.NamespaceComparer.Compare(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Compares two <see cref="T:NamespaceInfo" /> objects, using the Name as parameter.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>The comparison result (-1, 0 or 1).</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.NavigationPath">
            <summary>
            Represents a Navigation Path.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NavigationPath.nspace">
            <summary>
            The namespace of the Navigation Path (<c>null</c> for the root).
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NavigationPath.name">
            <summary>
            The Name of the Navigation Path.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NavigationPath.pages">
            <summary>
            The names of the Pages in the Navigation Path.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.NavigationPath.provider">
            <summary>
            The Provider that handles the Navigation Path.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.NavigationPath.#ctor(System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40)">
            <summary>
            Initializes a new instance of the <b>NavigationPath</b> class.
            </summary>
            <param name="fullName">The Full Name of the Navigation Path.</param>
            <param name="provider">The Provider</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.NavigationPath.FullName">
            <summary>
            Gets or sets the full name of the Navigation Path, such as 'Namespace.Path' or 'Path'.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.NavigationPath.Pages">
            <summary>
            Gets or sets the Pages of the Path.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.NavigationPath.Provider">
            <summary>
            Gets the Provider.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.NavigationPathComparer">
            <summary>
            Compares two <see cref="T:NavigationPaths" /> objects, using FullName as the comparison parameter.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.NavigationPathComparer.Compare(ScrewTurn.Wiki.PluginFramework.NavigationPath,ScrewTurn.Wiki.PluginFramework.NavigationPath)">
            <summary>
            Compares two Navigation Paths's FullName.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>The result of the comparison (1, 0 or -1).</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.PageActivityEventArgs">
            <summary>
            Contains arguments for Page Activity events.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.PageActivityEventArgs.#ctor(System.String,System.String,System.String,ScrewTurn.Wiki.PluginFramework.PageActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:PageActivityEventArgs" /> class.
            </summary>
            <param name="pageFullName">The full name of the page the activity refers to.</param>
            <param name="pageOldName">The old name of the renamed page, or <c>null</c>.</param>
            <param name="author">The author of the activity, if available, <c>null</c> otherwise.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageActivityEventArgs.PageFullName">
            <summary>
            Gets the page the activity refers to.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageActivityEventArgs.PageOldName">
            <summary>
            Gets the old name of the renamed page, or <c>null</c>.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageActivityEventArgs.Author">
            <summary>
            Gets the author of the activity.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageActivityEventArgs.Activity">
            <summary>
            Gets the activity.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.PageActivity">
            <summary>
            Lists legal Page Activity types.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageActivity.PageCreated">
            <summary>
            A page has been created.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageActivity.PageModified">
            <summary>
            A page has been modified.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageActivity.PageDraftSaved">
            <summary>
            A draft for a page has been saved.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageActivity.PageRenamed">
            <summary>
            A page has been renamed.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageActivity.PageRolledBack">
            <summary>
            A page has been rolled back.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageActivity.PageBackupsDeleted">
            <summary>
            A page's backups have been deleted.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageActivity.PageDeleted">
            <summary>
            A page has been deleted.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageActivity.MessagePosted">
            <summary>
            A message has been posted to a page discussion.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageActivity.MessageModified">
            <summary>
            A message has been modified.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageActivity.MessageDeleted">
            <summary>
            A message has been deleted from a page discussion.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.PageContent">
            <summary>
            Contains the Content of a Page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.nspace">
            <summary>
            The namespace of the Page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.name">
            <summary>
            The Name of the Page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.provider">
            <summary>
            The Provider that handles the Page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.creationDateTime">
            <summary>
            The Page creation Date/Time.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.title">
            <summary>
            The Title of the Page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.user">
            <summary>
            The Username of the user who modified the Page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.lastModified">
            <summary>
            The Date/Time of the last modification.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.comment">
            <summary>
            The comment of the editor, about this revision.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.content">
            <summary>
            The Content of the Page (WikiMarkup).
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.keywords">
            <summary>
            The keywords, usually used for SEO.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.description">
            <summary>
            The page description, usually used for SEO.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.PageContent.linkedPages">
            <summary>
            The Pages linked in this Page (both existent and inexistent).
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.PageContent.#ctor(System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40,System.DateTime,System.String,System.String,System.DateTime,System.String,System.String,System.String[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PageContent"/> class.
            </summary>
            <param name="pageFullName">The PageInfo object.</param>
            <param name="provider">The Pages Storage Provider that manages this Page.</param>
            <param name="creationDateTime">The Page creation Date/Time.</param>
            <param name="title">The Title.</param>
            <param name="user">The User that last modified the Page.</param>
            <param name="lastModified">The last modification Date and Time.</param>
            <param name="comment">The Comment of the editor, about this revision.</param>
            <param name="content">The <b>unparsed</b> Content.</param>
            <param name="keywords">The keywords, usually used for SEO, or <c>null</c>.</param>
            <param name="description">The description, usually used for SEO, or <c>null</c>.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.FullName">
            <summary>
            Gets or sets the full name of the Page, such as 'Namespace.Page' or 'Page'.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.Provider">
            <summary>
            Gets or sets the Pages Storage Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.CreationDateTime">
            <summary>
            Gets or sets the creation Date/Time.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.Title">
            <summary>
            Gets the Title.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.User">
            <summary>
            Gets the User.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.LastModified">
            <summary>
            Gets the last modification Date and Time.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.Comment">
            <summary>
            Gets the Comment of the editor, about this revision.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.Content">
            <summary>
            Gets the <b>unformatted</b> Content.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.Keywords">
            <summary>
            Gets the keywords, usually used for SEO.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.Description">
            <summary>
            Gets the description, usually used for SEO.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.PageContent.LinkedPages">
            <summary>
            Gets or sets the Linked Pages, both existent and inexistent.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.PageContent.IsEmpty">
            <summary>
            Determines whether the current instance was built using <see cref="M:GetEmpty"/>.
            </summary>
            <returns><c>True</c> if the instance is empty, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.PageContent.GetEmpty(System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40,System.DateTime)">
            <summary>
            Gets an empty instance of <see cref="T:PageContent" />.
            </summary>
            <param name="pageFullName">The page full name.</param>
            <param name="provider">The Pages Storage Provider that manages this Page.</param>
            <param name="creationDateTime">The Page creation Date/Time.</param>
            <returns>The instance.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.PageContent.EmptyPageContent">
            <summary>
            Represents an empty page content.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.PageContent.EmptyPageContent.#ctor(System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyPageContent"/> class.
            </summary>
            <param name="pageFullName">The page the content refers to.</param>
            <param name="provider">The Pages Storage Provider that manages this Page.</param>
            <param name="creationDateTime">The Page creation Date/Time.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.PageNameComparer">
            <summary>
            Compares two <see cref="T:PageInfo" /> objects, using the FullName as parameter.
            </summary>
            <remarks>The comparison is <b>case insensitive</b>.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.PageNameComparer.Compare(ScrewTurn.Wiki.PluginFramework.PageContent,ScrewTurn.Wiki.PluginFramework.PageContent)">
            <summary>
            Compares two <see cref="T:PageInfo" /> objects, using the FullName as parameter.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>The comparison result (-1, 0 or 1).</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.RecentChange">
            <summary>
            Represents a Change.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.RecentChange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ScrewTurn.Wiki.PluginFramework.RecentChange"/> class.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.RecentChange.#ctor(System.String,System.String,System.String,System.DateTime,System.String,ScrewTurn.Wiki.PluginFramework.Change,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RecentChange" /> class.
            </summary>
            <param name="page">The page pame.</param>
            <param name="title">The page title.</param>
            <param name="messageSubject">The message subject (or <c>null</c>).</param>
            <param name="dateTime">The date/time.</param>
            <param name="user">The user.</param>
            <param name="change">The change.</param>
            <param name="descr">The description (optional).</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.RecentChange.Page">
            <summary>
            Gets the page name.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.RecentChange.Title">
            <summary>
            Gets the page title.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.RecentChange.MessageSubject">
            <summary>
            Gets the message subject (or <c>null</c>).
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.RecentChange.DateTime">
            <summary>
            Gets the date/time.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.RecentChange.User">
            <summary>
            Gets the user.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.RecentChange.Change">
            <summary>
            Gets the change.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.RecentChange.Description">
            <summary>
            Gets the description (optional).
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.Change">
            <summary>
            Lists possible changes.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Change.PageUpdated">
            <summary>
            A page was updated.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Change.PageDeleted">
            <summary>
            A page was deleted.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Change.PageRolledBack">
            <summary>
            A page was rolled back.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Change.PageRenamed">
            <summary>
            A page was renamed.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Change.MessagePosted">
            <summary>
            A message was posted to a page discussion.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Change.MessageDeleted">
            <summary>
            A message was deleted from a page discussion.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Change.MessageEdited">
            <summary>
            A message was edited in a page discussion.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.Snippet">
            <summary>
            Contains a Snippet.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Snippet.name">
            <summary>
            The name of the Snippet.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Snippet.content">
            <summary>
            The content of the Snippet.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.Snippet.provider">
            <summary>
            The Provider that handles the Snippet.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.Snippet.#ctor(System.String,System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV40)">
            <summary>
            Initializes a new instance of the <b>Snippet</b> class.
            </summary>
            <param name="name">The Name of the Snippet.</param>
            <param name="content">The Content of the Snippet.</param>
            <param name="provider">The Provider of the Snippet.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Snippet.Name">
            <summary>
            Gets the Name of the Snippet.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Snippet.Content">
            <summary>
            Gets or sets the Content of the Snippet.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Snippet.Provider">
            <summary>
            Gets the Provider of the Snippet.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.SnippetNameComparer">
            <summary>
            Compares two <see cref="T:Snippet" /> objects.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.SnippetNameComparer.Compare(ScrewTurn.Wiki.PluginFramework.Snippet,ScrewTurn.Wiki.PluginFramework.Snippet)">
            <summary>
            Compares the name of two <see cref="T:Snippet" /> objects.
            </summary>
            <param name="x">The first <see cref="T:Snippet" />.</param>
            <param name="y">The second <see cref="T:Snippet" />.</param>
            <returns>The result of the comparison (1, 0 or -1).</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.StandardAclManager">
            <summary>
            Implements a standard ACL Manager.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.StDirectoryInfo">
            <summary>
            Contains information about a directory.
            </summary>
            <remarks>This class is only used for provider-host communication.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.StDirectoryInfo.#ctor(System.String,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40)">
            <summary>
            Initializes a new instance of the <see cref="T:StDirectoryInfo" /> class.
            </summary>
            <param name="fullPath">The full path of the directory, for example <b>/dir/sub/</b> or <b>/</b>.</param>
            <param name="provider">The provider that handles the directory.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.StDirectoryInfo.FullPath">
            <summary>
            Gets the full path of the directory, for example <b>/dir/sub/</b> or <b>/</b>.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.StDirectoryInfo.Provider">
            <summary>
            Gets the provider that handles the directory.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.StDirectoryInfo.GetDirectory(System.String)">
            <summary>
            Gets the directory of a file.
            </summary>
            <param name="filePath">The full file path, such as '/file.txt' or '/directory/sub/file.txt'.</param>
            <returns>The directory, such as '/' or '/directory/sub/'.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.StFileInfo">
            <summary>
            Contains information about a file.
            </summary>
            <remarks>This class is only used for provider-host communication.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.StFileInfo.#ctor(System.Int64,System.DateTime,System.String,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40)">
            <summary>
            Initializes a new instance of the <see cref="T:StFileInfo" /> class.
            </summary>
            <param name="size">The size of the file in bytes.</param>
            <param name="lastModified">The last modification date/time.</param>
            <param name="fullName">The full name of the file, for example <b>/dir/sub/file.txt</b> or <b>/file.txt</b>.</param>
            <param name="provider">The provider that handles the file.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.StFileInfo.#ctor(ScrewTurn.Wiki.PluginFramework.FileDetails,System.String,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV40)">
            <summary>
            Initializes a new instance of the <see cref="T:ScrewTurn.Wiki.PluginFramework.StFileInfo" /> class.
            </summary>
            <param name="details">The file details.</param>
            <param name="fullName">The full name.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.StFileInfo.FullName">
            <summary>
            Gets the full name of the file, for example <b>/dir/sub/file.txt</b> or <b>/file.txt</b>.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.StFileInfo.Provider">
            <summary>
            Gets the provider that handles the file.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.StFileInfo.GetDirectory">
            <summary>
            Gets the directory path of the file.
            </summary>
            <returns>The directory path.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.WikiListHandler">
            <summary>
            The handler for custom StorageProvider section in WebConfig.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.WikiListHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Creates a configuration section handler.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="configContext">Configuration context object.</param>
            <param name="section">Section XML node.</param>
            <returns>The created section handler object.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.UserAccountActivityEventArgs">
            <summary>
            Contains arguments for User Account Activity events.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.UserAccountActivityEventArgs.#ctor(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.UserAccountActivity)">
            <summary>
            Initializes a new instance of the <b>UserAccountActivityEventArgs</b> class.
            </summary>
            <param name="user">The User Info the activity refers to.</param>
            <param name="activity">The activity performed.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserAccountActivityEventArgs.User">
            <summary>
            Gets the user the activity refers to.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserAccountActivityEventArgs.Activity">
            <summary>
            Gets the activity performed.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.UserAccountActivity">
            <summary>
            Lists legal User Account Activity types.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserAccountActivity.AccountAdded">
            <summary>
            A user account has been added.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserAccountActivity.AccountActivated">
            <summary>
            A user account has been activated.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserAccountActivity.AccountDeactivated">
            <summary>
            A user account has been deactivated.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserAccountActivity.AccountModified">
            <summary>
            A user account has been modified (email, password).
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserAccountActivity.AccountRemoved">
            <summary>
            A user account has been removed.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserAccountActivity.AccountMembershipChanged">
            <summary>
            A user account group membership has been changed.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.UserGroup">
            <summary>
            Represents a group of users.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserGroup.name">
            <summary>
            The group name.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserGroup.description">
            <summary>
            The group description.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserGroup.users">
            <summary>
            The users in the group.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserGroup.provider">
            <summary>
            The provider that handles the user group.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.UserGroup.#ctor(System.String,System.String,ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40)">
            <summary>
            Initializes a new instance of the <see cref="T:UserGroup" /> class.
            </summary>
            <param name="name">The name of the group.</param>
            <param name="description">The description of the group.</param>
            <param name="provider">The Users Storage Provider that handles the user group.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserGroup.Name">
            <summary>
            Gets or sets the name of the user group.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserGroup.Description">
            <summary>
            Gets or sets the description of the group.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserGroup.Users">
            <summary>
            Gets or sets the users in the group.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserGroup.Provider">
            <summary>
            Gets or sets the provider that handles the user group.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.UserGroupComparer">
            <summary>
            Implements a comparer for <see cref="T:UserGroup" /> objects, using <b>Name</b> as parameter.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.UserGroupComparer.Compare(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Compares two <see cref="T:UserGroup" /> objects, using <b>Name</b> as parameter.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>The comparison result.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.UserGroupActivityEventArgs">
            <summary>
            Contains arguments for the User Group Activity events.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.UserGroupActivityEventArgs.#ctor(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.UserGroupActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:UserGroupActivityEventArgs" /> class.
            </summary>
            <param name="group">The user group the activity refers to.</param>
            <param name="activity">The activity performed.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserGroupActivityEventArgs.Group">
            <summary>
            Gets the user group the activity refers to.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserGroupActivityEventArgs.Activity">
            <summary>
            Gets the activity performed.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.UserGroupActivity">
            <summary>
            Lists legal user group activity types.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserGroupActivity.GroupAdded">
            <summary>
            A group has been added.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserGroupActivity.GroupRemoved">
            <summary>
            A group has been removed.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserGroupActivity.GroupModified">
            <summary>
            A group has been modified.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.UserInfo">
            <summary>
            Describes a User.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserInfo.username">
            <summary>
            The Username of the User.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserInfo.displayName">
            <summary>
            The display name of the User.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserInfo.email">
            <summary>
            The Email address of the User.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserInfo.active">
            <summary>
            A value indicating whether the user account is active.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserInfo.dateTime">
            <summary>
            The account creation date/time.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserInfo.groups">
            <summary>
            The names of the groups the user is member of.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PluginFramework.UserInfo.provider">
            <summary>
            The Provider that handles the User.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.UserInfo.#ctor(System.String,System.String,System.String,System.Boolean,System.DateTime,ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV40)">
            <summary>
            Initializes a new instance of the <b>UserInfo</b> class.
            </summary>
            <param name="username">The Username.</param>
            <param name="displayName">The display name.</param>
            <param name="email">The Email.</param>
            <param name="active">Specifies whether the Account is active or not.</param>
            <param name="dateTime">The creation DateTime.</param>
            <param name="provider">The Users Storage Provider that manages the User.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserInfo.Username">
            <summary>
            Gets the Username.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserInfo.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserInfo.Email">
            <summary>
            Gets or sets the Email.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserInfo.Active">
            <summary>
            Gets or sets a value specifying whether the Account is active or not.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserInfo.DateTime">
            <summary>
            Gets the creation DateTime.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserInfo.Groups">
            <summary>
            Gets or sets the names of the groups the user is member of.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.UserInfo.Provider">
            <summary>
            Gets or sets the Users Storage Provider.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.UserInfo.ToString">
            <summary>
            Converts the current instance to a string.
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.UsernameComparer">
            <summary>
            Provides a method for comparing two <b>UserInfo</b> objects, comparing their Username.
            </summary>
            <remarks>The comparison is <b>case unsensitive</b>.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.UsernameComparer.Compare(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Compares two UserInfo objects, comparing their Username.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>The comparison result (-1, 0 or 1).</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PluginFramework.Wiki">
            <summary>
            Represent a Wiki object containing info about the name of a wiki and its associated hosts.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PluginFramework.Wiki.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ScrewTurn.Wiki.PluginFramework.Wiki"/> class.
            </summary>
            <param name="wikiName">The name of the wiki.</param>
            <param name="wikiHosts">The hosts associated with the wiki name.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Wiki.WikiName">
            <summary>
            Gets the name of the wiki.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PluginFramework.Wiki.Hosts">
            <summary>
            Gets the hosts.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Exchanger">
            <summary>
            Class used for exchaning data between the <b>Core</b> library and the Wiki engine.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Exchanger.ResourceExchanger">
            <summary>
            Gets or sets the singleton instance of the Resource Exchanger object.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.IResourceExchanger">
            <summary>
            Exposes methods for exchanging Resources.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.IResourceExchanger.GetResource(System.String)">
            <summary>
            Gets a Resource String.
            </summary>
            <param name="name">The Name of the Resource.</param>
            <returns>The Resource String.</returns>
        </member>
    </members>
</doc>
